{"version":3,"sources":["./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.html","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.html","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.html","./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.scss","./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.ts","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.scss","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.ts","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.scss","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.ts","./app/modules/inquiry/inquiry-routing.module.ts","./app/modules/inquiry/inquiry.module.ts"],"names":[],"mappings":"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","file":"modules-inquiry-inquiry-module.js","sourcesContent":["export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\r\\n    <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.confirm.title' | translate }}</h2>\\r\\n    <div *ngIf=\\\"(order | async).order.orderStatus === orderStatus.OrderReturned\\\">\\r\\n        <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.confirm.canceled' | translate\\\"></p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"(order | async).order.orderStatus !== orderStatus.OrderReturned\\\">\\r\\n        <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.confirm.read' | translate\\\"></p>\\r\\n        <div class=\\\"mb-4 px-3 py-2 bg-white\\\">\\r\\n            <div class=\\\"row align-items-center\\\">\\r\\n                <p class=\\\"col-4\\\">\\r\\n                    {{ 'common.confirmationNumber' | translate }}</p>\\r\\n                <p class=\\\"col-8 text-large text-info font-weight-bold\\\">\\r\\n                    {{ (order | async).order.confirmationNumber }}\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let eventOrder of eventOrders\\\" class=\\\"mb-4 bg-white p-3\\\">\\r\\n            <div class=\\\"mb-3\\\">\\r\\n                <div class=\\\"mb-1\\\">\\r\\n                    <p class=\\\"font-weight-bold text-large\\\">{{ eventOrder.event.name | changeLanguage }}</p>\\r\\n                    <p class=\\\"text-small\\\"\\r\\n                        *ngIf=\\\"eventOrder.event.superEvent.headline && (eventOrder.event.superEvent.headline | changeLanguage)\\\">\\r\\n                        {{ eventOrder.event.superEvent.headline | changeLanguage }}</p>\\r\\n                    <p class=\\\"text-small\\\"\\r\\n                        *ngIf=\\\"eventOrder.event.superEvent.description && (eventOrder.event.superEvent.description | changeLanguage)\\\">{{\\r\\n                        eventOrder.event.superEvent.description | changeLanguage }}</p>\\r\\n                </div>\\r\\n                <p class=\\\"mb-1\\\">\\r\\n                    {{ eventOrder.event.startDate | formatDate: 'MM/DD(ddd) HH:mm' }}-{{ eventOrder.event.endDate | formatDate: 'HH:mm' }}\\r\\n                </p>\\r\\n                <p class=\\\"text-small mb-1\\\">\\r\\n                    <span class=\\\"theatre-name\\\">{{ eventOrder.event.superEvent.location.name | changeLanguage }}</span>\\r\\n                    <span class=\\\"screen-name\\\">&nbsp;/&nbsp;{{ eventOrder.event.location.name | changeLanguage }}</span>\\r\\n                    <span\\r\\n                        *ngIf=\\\"eventOrder.event.workPerformed?.duration && moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() > 0\\\">\\r\\n                        &nbsp;/&nbsp;<span\\r\\n                            class=\\\"mr-1\\\">{{ 'common.duration' | translate }}</span>{{ moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() }}{{ 'common.date.minute' | translate }}\\r\\n                    </span>\\r\\n                </p>\\r\\n            </div>\\r\\n            <hr class=\\\"mb-3\\\">\\r\\n            <div *ngIf=\\\"environment.DISPLAY_TICKETED_SEAT\\\">\\r\\n                <div *ngFor=\\\"let acceptedOffer of eventOrder.data\\\">\\r\\n                    <p>\\r\\n                        <span\\r\\n                            *ngIf=\\\"acceptedOffer.itemOffered.reservedTicket.ticketedSeat && environment.DISPLAY_TICKETED_SEAT\\\">\\r\\n                            {{ acceptedOffer.itemOffered.reservedTicket.ticketedSeat.seatNumber }}&nbsp;/&nbsp;</span>{{ acceptedOffer.itemOffered.reservedTicket.ticketType.name | changeLanguage }}&nbsp;/&nbsp;{{\\r\\n                            getTicketPrice(acceptedOffer).single | currency : 'JPY' }}\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"!environment.DISPLAY_TICKETED_SEAT\\\">\\r\\n                <div *ngFor=\\\"let ticket of changeTicketCountByOrder(eventOrder.data)\\\">\\r\\n                    <p>\\r\\n                        {{ ticket.acceptedOffer.itemOffered.reservedTicket.ticketType.name | changeLanguage }}&nbsp;/&nbsp;{{\\r\\n                            getTicketPrice(ticket.acceptedOffer).single | currency : 'JPY' }}&nbsp;×&nbsp;{{ ticket.count }}\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"mb-4 px-3 bg-white\\\">\\r\\n            <div class=\\\"py-3 border-bottom border-gray customer-name\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.customerName' | translate }}</p>\\r\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.familyName }}\\r\\n                        {{ (order | async).order.customer.givenName }}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"py-3 border-bottom border-gray email\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.email' | translate }}</p>\\r\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.email }}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"py-3 telephone\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.telephone' | translate }}</p>\\r\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.telephone | libphonenumberFormat }}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"py-3\\\" *ngIf=\\\"(order | async).order.price > 0\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.paymentMethod' | translate }}</p>\\r\\n                    <p class=\\\"col-md-8\\\">クレジットカード</p>\\r\\n                </div>\\r\\n            </div> -->\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"buttons mx-auto text-center\\\">\\r\\n        <div *ngIf=\\\"(order | async).order.orderStatus !== orderStatus.OrderReturned\\\">\\r\\n            <button *ngIf=\\\"environment.INQUIRY_QRCODE\\\"\\r\\n                [disabled]=\\\"(order | async).order.orderStatus !== orderStatus.OrderDelivered\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-primary btn-block py-3 mb-3\\\"\\r\\n                (click)=\\\"showQrCode()\\\">{{ 'inquiry.confirm.next' | translate }}</button>\\r\\n            <button *ngIf=\\\"environment.INQUIRY_PRINT\\\"\\r\\n                [disabled]=\\\"(order | async).order.orderStatus !== orderStatus.OrderDelivered\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-primary btn-block py-3 mb-3\\\" (click)=\\\"print()\\\"\\r\\n                [disabled]=\\\"isLoading | async\\\">{{ 'inquiry.confirm.print' | translate }}</button>\\r\\n            <button *ngIf=\\\"environment.INQUIRY_CANCEL\\\"\\r\\n                [disabled]=\\\"(order | async).order.orderStatus !== orderStatus.OrderDelivered\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-danger btn-block py-3 mb-3\\\"\\r\\n                (click)=\\\"cancelConfirm()\\\">{{ 'inquiry.confirm.cancel' | translate }}</button>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\r\\n            routerLink=\\\"/inquiry/input\\\">{{ 'inquiry.confirm.prev' | translate }}</button>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\r\\n    <form [formGroup]=\\\"inquiryForm\\\">\\r\\n        <div class=\\\"mb-4\\\">\\r\\n            <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.input.title' | translate }}</h2>\\r\\n            <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.input.read' | translate\\\"></p>\\r\\n\\r\\n            <div class=\\\"inquiry-form mx-auto p-3 bg-white\\\">\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"mb-2\\\" for=\\\"\\\">{{ 'common.confirmationNumber' | translate }}</label>\\r\\n                    <app-numeric-keypad *ngIf=\\\"environment.INQUIRY_INPUT_KEYPAD\\\" inputType=\\\"number\\\"\\r\\n                        [inputValue]=\\\"inquiryForm.controls.confirmationNumber.value\\\"\\r\\n                        (change)=\\\"changeConfirmationNumber($event)\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmationNumber\\\"\\r\\n                            id=\\\"confirmationNumber\\\" [placeholder]=\\\"'form.placeholder.confirmationNumber' | translate\\\"\\r\\n                            readonly>\\r\\n                    </app-numeric-keypad>\\r\\n                    <input *ngIf=\\\"!environment.INQUIRY_INPUT_KEYPAD\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                        formControlName=\\\"confirmationNumber\\\" id=\\\"confirmationNumber\\\"\\r\\n                        [placeholder]=\\\"'form.placeholder.confirmationNumber' | translate\\\">\\r\\n                    <div *ngIf=\\\"inquiryForm.controls.confirmationNumber.invalid && inquiryForm.controls.confirmationNumber.touched\\\"\\r\\n                        class=\\\"mt-2\\\">\\r\\n                        <p *ngIf=\\\"inquiryForm.controls.confirmationNumber.errors.required\\\" class=\\\"text-danger\\\">\\r\\n                            {{ 'form.validation.required' | translate }}</p>\\r\\n                        <p *ngIf=\\\"inquiryForm.controls.confirmationNumber.errors.pattern\\\" class=\\\"text-danger\\\">\\r\\n                            {{ 'form.validation.number' | translate }}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group mb-0\\\">\\r\\n                    <label class=\\\"mb-2\\\" for=\\\"\\\">{{ 'common.telephone' | translate }}</label>\\r\\n                    <app-numeric-keypad *ngIf=\\\"environment.INQUIRY_INPUT_KEYPAD\\\" inputType=\\\"telephone\\\"\\r\\n                        [inputValue]=\\\"inquiryForm.controls.telephone.value\\\" (change)=\\\"changeTelephone($event)\\\">\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"telephone\\\" id=\\\"telephone\\\"\\r\\n                            [placeholder]=\\\"'form.placeholder.telephone' | translate\\\" readonly>\\r\\n                    </app-numeric-keypad>\\r\\n                    <input *ngIf=\\\"!environment.INQUIRY_INPUT_KEYPAD\\\" type=\\\"password\\\" class=\\\"form-control\\\"\\r\\n                        formControlName=\\\"telephone\\\" id=\\\"telephone\\\"\\r\\n                        [placeholder]=\\\"'form.placeholder.telephone' | translate\\\">\\r\\n                    <div *ngIf=\\\"inquiryForm.controls.telephone.invalid && inquiryForm.controls.telephone.touched\\\"\\r\\n                        class=\\\"mt-2\\\">\\r\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.required\\\" class=\\\"text-danger\\\">\\r\\n                            {{ 'form.validation.required' | translate }}</p>\\r\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.minlength\\\" class=\\\"text-danger\\\">\\r\\n                            {{ 'form.validation.minlength' | translate: { value: inquiryForm.controls.telephone.errors.minlength.requiredLength } }}\\r\\n                        </p>\\r\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.maxlength\\\" class=\\\"text-danger\\\">\\r\\n                            {{ 'form.validation.maxlength' | translate: { value: inquiryForm.controls.telephone.errors.maxlength.requiredLength } }}\\r\\n                        </p>\\r\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.pattern\\\" class=\\\"text-danger\\\">\\r\\n                            {{ 'form.validation.number' | translate }}</p>\\r\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.telephone\\\" class=\\\"text-danger\\\">\\r\\n                            {{ 'form.validation.telephone' | translate }}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"buttons mx-auto text-center\\\">\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"isLoading | async\\\" class=\\\"btn btn-primary btn-block py-3 mb-3\\\"\\r\\n                (click)=\\\"onSubmit()\\\">{{ 'inquiry.input.next' | translate }}</button>\\r\\n            <a *ngIf=\\\"environment.PORTAL_SITE_URL\\\" class=\\\"btn btn-link portal-link\\\"\\r\\n                [href]=\\\"environment.PORTAL_SITE_URL\\\">{{ 'inquiry.input.prev' | translate }}</a>\\r\\n            <button *ngIf=\\\"!environment.PORTAL_SITE_URL\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\"\\r\\n                routerLink=\\\"/\\\">{{ 'inquiry.input.prev' | translate }}</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\r\\n    <div class=\\\"mb-4\\\">\\r\\n        <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.print.title' | translate }}</h2>\\r\\n        <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.print.read' | translate\\\"></p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"buttons mx-auto text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block py-3\\\" routerLink=\\\"/inquiry/input\\\">\\r\\n            {{ 'inquiry.print.prev' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LWNvbmZpcm0vaW5xdWlyeS1jb25maXJtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { factory } from '@cinerino/api-javascript-client';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as moment from 'moment';\r\nimport { BsModalService } from 'ngx-bootstrap';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../../../environments/environment';\r\nimport { changeTicketCountByOrder, getTicketPrice, IEventOrder, orderToEventOrders } from '../../../../../functions';\r\nimport { OrderService, UserService, UtilService } from '../../../../../services';\r\nimport * as reducers from '../../../../../store/reducers';\r\nimport { QrCodeModalComponent } from '../../../../shared/components/parts/qrcode-modal/qrcode-modal.component';\r\n\r\n@Component({\r\n    selector: 'app-inquiry-confirm',\r\n    templateUrl: './inquiry-confirm.component.html',\r\n    styleUrls: ['./inquiry-confirm.component.scss']\r\n})\r\nexport class InquiryConfirmComponent implements OnInit, OnDestroy {\r\n    public order: Observable<reducers.IOrderState>;\r\n    public user: Observable<reducers.IUserState>;\r\n    public moment: typeof moment = moment;\r\n    public getTicketPrice = getTicketPrice;\r\n    public changeTicketCountByOrder = changeTicketCountByOrder;\r\n    public eventOrders: IEventOrder[];\r\n    public error: Observable<string | null>;\r\n    public orderStatus: typeof factory.orderStatus = factory.orderStatus;\r\n    public environment = environment;\r\n    private timer: any;\r\n\r\n    constructor(\r\n        private store: Store<reducers.IState>,\r\n        private router: Router,\r\n        private modal: BsModalService,\r\n        private utilService: UtilService,\r\n        private orderService: OrderService,\r\n        private userService: UserService,\r\n        private translate: TranslateService\r\n    ) { }\r\n\r\n    /**\r\n     * 初期化\r\n     */\r\n    public ngOnInit() {\r\n        this.eventOrders = [];\r\n        this.error = this.store.pipe(select(reducers.getError));\r\n        this.order = this.store.pipe(select(reducers.getOrder));\r\n        this.user = this.store.pipe(select(reducers.getUser));\r\n        this.order.subscribe((value) => {\r\n            if (value.order === undefined) {\r\n                this.router.navigate(['/error']);\r\n                return;\r\n            }\r\n            const order = value.order;\r\n            this.eventOrders = orderToEventOrders({ order });\r\n        }).unsubscribe();\r\n        if (environment.INQUIRY_PRINT_WAIT_TIME !== '') {\r\n            const time = Number(environment.INQUIRY_PRINT_WAIT_TIME);\r\n            this.timer = setTimeout(() => {\r\n                this.router.navigate(['/inquiry/input']);\r\n            }, time);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 破棄\r\n     */\r\n    public ngOnDestroy() {\r\n        if (this.timer === undefined) {\r\n            return;\r\n        }\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    /**\r\n     * QRコード表示\r\n     */\r\n    public async showQrCode() {\r\n        try {\r\n            let orderData = await this.orderService.getData();\r\n            if (orderData.order === undefined) {\r\n                throw new Error('order undefined');\r\n            }\r\n            await this.orderService.authorize(orderData.order);\r\n            orderData = await this.orderService.getData();\r\n            const authorizeOrder = orderData.order;\r\n            if (authorizeOrder === undefined) {\r\n                throw new Error('authorizeOrder undefined');\r\n            }\r\n            this.modal.show(QrCodeModalComponent, {\r\n                initialState: { order: authorizeOrder },\r\n                class: 'modal-dialog-centered'\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n            this.utilService.openAlert({\r\n                title: this.translate.instant('common.error'),\r\n                body: this.translate.instant('inquiry.confirm.alert.authorize')\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * キャンセル確認\r\n     */\r\n    public cancelConfirm() {\r\n        this.utilService.openConfirm({\r\n            title: this.translate.instant('common.confirm'),\r\n            body: this.translate.instant('inquiry.confirm.confirm.cancel'),\r\n            cb: async () => {\r\n                try {\r\n                    const userData = await this.userService.getData();\r\n                    let orderData = await this.orderService.getData();\r\n                    if (orderData.order === undefined) {\r\n                        throw new Error('order undefined');\r\n                    }\r\n                    const orders = [orderData.order];\r\n                    const language = userData.language;\r\n                    await this.orderService.cancel({ orders, language });\r\n                    orderData = await this.orderService.getData();\r\n                    if (orderData.order === undefined) {\r\n                        throw new Error('order undefined');\r\n                    }\r\n                    await this.orderService.inquiry({\r\n                        confirmationNumber: orderData.order.confirmationNumber,\r\n                        customer: { telephone: orderData.order.customer.telephone }\r\n                    });\r\n                } catch (error) {\r\n                    this.utilService.openAlert({\r\n                        title: this.translate.instant('common.error'),\r\n                        body: `\r\n                        <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.cancel')}</p>\r\n                        <div class=\"p-3 bg-light-gray select-text error\">\r\n                            <code>${error}</code>\r\n                        </div>`\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 印刷\r\n     */\r\n    public async print() {\r\n        const today = moment().format('YYYYMMDD');\r\n        const limit = moment(today)\r\n            .add(environment.INQUIRY_PRINT_EXPIRED_VALUE, environment.INQUIRY_PRINT_EXPIRED_UNIT)\r\n            .format('YYYYMMDD');\r\n        const findResult = this.eventOrders.find(o => moment(o.event.startDate).format('YYYYMMDD') < limit);\r\n        if (findResult !== undefined) {\r\n            this.utilService.openAlert({\r\n                title: this.translate.instant('common.error'),\r\n                body: this.translate.instant('inquiry.confirm.alert.printExpired')\r\n            });\r\n            return;\r\n        }\r\n        if (this.timer !== undefined) {\r\n            clearTimeout(this.timer);\r\n        }\r\n        try {\r\n            const orderData = await this.orderService.getData();\r\n            const user = await this.userService.getData();\r\n            if (orderData.order === undefined\r\n                || user.pos === undefined\r\n                || user.printer === undefined) {\r\n                this.router.navigate(['/error']);\r\n                return;\r\n            }\r\n            const orders = [orderData.order];\r\n            const pos = user.pos;\r\n            const printer = user.printer;\r\n            await this.orderService.print({ orders, pos, printer });\r\n            this.router.navigate(['/inquiry/print']);\r\n        } catch (error) {\r\n            console.error(error);\r\n            this.router.navigate(['/error']);\r\n        }\r\n    }\r\n}\r\n","export default \".inquiry-form {\\n  max-width: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jbGllbnQvYXBwL21vZHVsZXMvaW5xdWlyeS9jb21wb25lbnRzL3BhZ2VzL2lucXVpcnktaW5wdXQvQzpcXFVzZXJzXFxha2l0b1xcRGVza3RvcFxcd29ya3NwYWNlXFxjaW5lcmlub1xcZnJvbnRlbmQvc3JjXFxjbGllbnRcXGFwcFxcbW9kdWxlc1xcaW5xdWlyeVxcY29tcG9uZW50c1xccGFnZXNcXGlucXVpcnktaW5wdXRcXGlucXVpcnktaW5wdXQuY29tcG9uZW50LnNjc3MiLCJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LWlucHV0L2lucXVpcnktaW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9jbGllbnQvYXBwL21vZHVsZXMvaW5xdWlyeS9jb21wb25lbnRzL3BhZ2VzL2lucXVpcnktaW5wdXQvaW5xdWlyeS1pbnB1dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnF1aXJ5LWZvcm0gIHtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbn0iLCIuaW5xdWlyeS1mb3JtIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as libphonenumber from 'libphonenumber-js';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../../../environments/environment';\r\nimport { OrderService, UtilService } from '../../../../../services';\r\nimport * as reducers from '../../../../../store/reducers';\r\n\r\n@Component({\r\n    selector: 'app-inquiry-input',\r\n    templateUrl: './inquiry-input.component.html',\r\n    styleUrls: ['./inquiry-input.component.scss']\r\n})\r\nexport class InquiryInputComponent implements OnInit {\r\n    public inquiryForm: FormGroup;\r\n    public environment = environment;\r\n    public isLoading: Observable<boolean>;\r\n    constructor(\r\n        private store: Store<reducers.IState>,\r\n        private formBuilder: FormBuilder,\r\n        private utilService: UtilService,\r\n        private orderService: OrderService,\r\n        private router: Router,\r\n        private translate: TranslateService\r\n    ) { }\r\n\r\n    /**\r\n     * 初期化\r\n     */\r\n    public ngOnInit() {\r\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\r\n        this.createInquiryForm();\r\n    }\r\n\r\n    /**\r\n     * 照会フォーム作成\r\n     */\r\n    private createInquiryForm() {\r\n        const TEL_MAX_LENGTH = 15;\r\n        const TEL_MIN_LENGTH = 9;\r\n        this.inquiryForm = this.formBuilder.group({\r\n            confirmationNumber: ['', [\r\n                Validators.required,\r\n                Validators.pattern(/^[0-9]+$/)\r\n            ]],\r\n            telephone: ['', [\r\n                Validators.required,\r\n                Validators.maxLength(TEL_MAX_LENGTH),\r\n                Validators.minLength(TEL_MIN_LENGTH),\r\n                (control: AbstractControl): ValidationErrors | null => {\r\n                    const field = control.root.get('telephone');\r\n                    if (field !== null) {\r\n                        if (field.value === '') {\r\n                            return null;\r\n                        }\r\n                        const parsedNumber = (new RegExp(/^\\+/).test(field.value))\r\n                            ? libphonenumber.parse(field.value)\r\n                            : libphonenumber.parse(field.value, 'JP');\r\n                        if (parsedNumber.phone === undefined) {\r\n                            return { telephone: true };\r\n                        }\r\n                        const isValid = libphonenumber.isValidNumber(parsedNumber);\r\n                        if (!isValid) {\r\n                            return { telephone: true };\r\n                        }\r\n                    }\r\n\r\n                    return null;\r\n                }\r\n            ]]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 照会\r\n     */\r\n    public async onSubmit() {\r\n        Object.keys(this.inquiryForm.controls).forEach((key) => {\r\n            this.inquiryForm.controls[key].markAsTouched();\r\n        });\r\n        this.inquiryForm.controls.confirmationNumber.setValue((<HTMLInputElement>document.getElementById('confirmationNumber')).value);\r\n        this.inquiryForm.controls.telephone.setValue((<HTMLInputElement>document.getElementById('telephone')).value);\r\n        if (this.inquiryForm.invalid) {\r\n            return;\r\n        }\r\n        const confirmationNumber = this.inquiryForm.controls.confirmationNumber.value;\r\n        const telephone = this.inquiryForm.controls.telephone.value;\r\n        try {\r\n            await this.orderService.inquiry({\r\n                confirmationNumber,\r\n                customer: { telephone }\r\n            });\r\n            this.router.navigate(['/inquiry/confirm']);\r\n        } catch (error) {\r\n            console.error(error);\r\n            this.utilService.openAlert({\r\n                title: this.translate.instant('common.error'),\r\n                body: this.translate.instant('inquiry.input.validation')\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 確認番号変更\r\n     */\r\n    public changeConfirmationNumber(value: string) {\r\n        this.inquiryForm.controls.confirmationNumber.setValue(value);\r\n    }\r\n\r\n    /**\r\n     * 電話番号変更\r\n     */\r\n    public changeTelephone(value: string) {\r\n        this.inquiryForm.controls.telephone.setValue(value);\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LXByaW50L2lucXVpcnktcHJpbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../../../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-inquiry-print',\r\n    templateUrl: './inquiry-print.component.html',\r\n    styleUrls: ['./inquiry-print.component.scss']\r\n})\r\nexport class InquiryPrintComponent implements OnInit, OnDestroy {\r\n    private timer: any;\r\n    constructor(\r\n        private router: Router\r\n    ) { }\r\n\r\n    /**\r\n     * 初期化\r\n     */\r\n    public ngOnInit() {\r\n        if (environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME === '') {\r\n            return;\r\n        }\r\n        const time = Number(environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME);\r\n        this.timer = setTimeout(() => {\r\n            this.router.navigate(['/inquiry/input']);\r\n        }, time);\r\n    }\r\n\r\n    /**\r\n     * 破棄\r\n     */\r\n    public ngOnDestroy() {\r\n        if (this.timer === undefined) {\r\n            return;\r\n        }\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\r\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\r\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\r\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BaseComponent,\r\n    children: [\r\n        { path: 'input', component: InquiryInputComponent },\r\n        { path: 'confirm', component: InquiryConfirmComponent },\r\n        { path: 'print', component: InquiryPrintComponent }\r\n    ]\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InquiryRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\r\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\r\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\r\nimport { InquiryRoutingModule } from './inquiry-routing.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InquiryInputComponent,\r\n    InquiryConfirmComponent,\r\n    InquiryPrintComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InquiryRoutingModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class InquiryModule { }\r\n"],"sourceRoot":"webpack:///"}