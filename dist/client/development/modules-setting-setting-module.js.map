{"version":3,"sources":["./app/modules/setting/pages/setting/setting.component.html","./app/modules/setting/pages/setting/setting.component.scss","./app/modules/setting/pages/setting/setting.component.ts","./app/modules/setting/setting-routing.module.ts","./app/modules/setting/setting.module.ts"],"names":[],"mappings":"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","file":"modules-setting-setting-module.js","sourcesContent":["export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\r\\n    <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'setting.title' | translate }}</h2>\\r\\n    <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'setting.read' | translate\\\"></p>\\r\\n    <form *ngIf=\\\"baseForm\\\" [formGroup]=\\\"baseForm\\\">\\r\\n        <div class=\\\"mb-4 p-3 bg-white\\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'common.theater' | translate }}</p>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"sellerBranchCode\\\" (change)=\\\"changePosList()\\\">\\r\\n                            <option value=\\\"\\\">{{ 'setting.unselected' | translate }}</option>\\r\\n                            <option *ngFor=\\\"let seller of (master | async).sellers\\\"\\r\\n                                [value]=\\\"seller.location.branchCode\\\">{{ seller.name.ja }}</option>\\r\\n                        </select>\\r\\n                        <!-- <div *ngIf=\\\"baseForm.controls.sellerBranchCode.invalid && baseForm.controls.sellerBranchCode.touched\\\"\\r\\n                            class=\\\"mt-2\\\">\\r\\n                            <p *ngIf=\\\"baseForm.controls.sellerBranchCode.errors.required\\\" class=\\\"text-danger\\\">\\r\\n                                {{ 'form.validation.unselected' | translate }}</p>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'setting.pos' | translate }}</p>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"posId\\\">\\r\\n                            <option value=\\\"\\\">{{ 'setting.unselected' | translate }}</option>\\r\\n                            <option *ngFor=\\\"let pos of posList\\\" [value]=\\\"pos.id\\\">{{ pos.name }}</option>\\r\\n                        </select>\\r\\n                        <!-- <div *ngIf=\\\"baseForm.controls.posId.invalid && baseForm.controls.posId.touched\\\"\\r\\n                            class=\\\"mt-2\\\">\\r\\n                            <p *ngIf=\\\"baseForm.controls.posId.errors.required\\\" class=\\\"text-danger\\\">\\r\\n                                {{ 'form.validation.unselected' | translate }}</p>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'setting.printer' | translate }}</p>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"printerType\\\">\\r\\n                            <option value=\\\"\\\">{{ 'setting.unselected' | translate }}</option>\\r\\n                            <option *ngFor=\\\"let printer of printers\\\" [value]=\\\"printer.connectionType\\\">\\r\\n                                {{ printer.name | translate }}</option>\\r\\n                        </select>\\r\\n                        <button\\r\\n                            *ngIf=\\\"this.baseForm.controls.printerType.value && this.baseForm.controls.printerType.value !== connectionType.None\\\"\\r\\n                            type=\\\"button\\\" class=\\\"btn btn-sm btn-primary py-2 mt-2\\\"\\r\\n                            (click)=\\\"print()\\\">{{ 'setting.testPrinting' | translate }}</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'setting.printerIpAddress' | translate }}</p>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"printerIpAddress\\\"\\r\\n                            placeholder=\\\"0.0.0.0\\\">\\r\\n                        <div *ngIf=\\\"baseForm.controls.printerIpAddress.invalid && baseForm.controls.printerIpAddress.touched\\\"\\r\\n                            class=\\\"mt-2\\\">\\r\\n                            <p *ngIf=\\\"baseForm.controls.printerIpAddress.errors.required\\\" class=\\\"text-danger\\\">\\r\\n                                {{ 'form.validation.required' | translate }}</p>\\r\\n                        </div>\\r\\n                        <p class=\\\"text-small mt-2\\\">\\r\\n                            {{ 'setting.printerIpAddressDescription' | translate }}\\r\\n                        </p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"environment.SETTING_DEVELOP_OPTION\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row align-items-center\\\">\\r\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\"> {{ 'setting.isPurchaseCart' | translate }}\\r\\n                        </p>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <select type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"isPurchaseCart\\\"\\r\\n                                id=\\\"isPurchaseCart\\\" placeholder=\\\"\\\">\\r\\n                                <option value=\\\"0\\\">{{ 'common.off' | translate }}</option>\\r\\n                                <option value=\\\"1\\\">{{ 'common.on' | translate }}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group mb-0\\\">\\r\\n                    <div class=\\\"row align-items-center\\\">\\r\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\"> {{ 'setting.viewType' | translate }}</p>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <select class=\\\"form-control\\\" id=\\\"viewType\\\" formControlName=\\\"viewType\\\">\\r\\n                                <option [value]=\\\"viewType.Cinema\\\">{{ viewType.Cinema }}</option>\\r\\n                                <option [value]=\\\"viewType.Event\\\">{{ viewType.Event }}</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"baseForm.controls.viewType.invalid && baseForm.controls.viewType.touched\\\"\\r\\n                                class=\\\"mt-2\\\">\\r\\n                                <p *ngIf=\\\"baseForm.controls.viewType.errors.required\\\" class=\\\"text-danger\\\">\\r\\n                                    {{ 'form.validation.required' | translate }}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"buttons mx-auto text-center\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block py-3 mb-3\\\" [disabled]=\\\"isLoading | async\\\"\\r\\n                (click)=\\\"updateBase()\\\">{{ 'setting.next' | translate }}</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\r\\n                [routerLink]=\\\"environment.BASE_URL\\\">{{ 'setting.prev' | translate }}</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL3NldHRpbmcvcGFnZXMvc2V0dGluZy9zZXR0aW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { connectionType, printers, ViewType } from '../../../../models';\r\nimport { MasterService, OrderService, QRCodeService, UserService, UtilService } from '../../../../services';\r\nimport * as reducers from '../../../../store/reducers';\r\n\r\n@Component({\r\n    selector: 'app-setting',\r\n    templateUrl: './setting.component.html',\r\n    styleUrls: ['./setting.component.scss']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n    public user: Observable<reducers.IUserState>;\r\n    public master: Observable<reducers.IMasterState>;\r\n    public error: Observable<string | null>;\r\n    public isLoading: Observable<boolean>;\r\n    public baseForm: FormGroup;\r\n    public cardExpiration: {\r\n        year: string[];\r\n        month: string[];\r\n    };\r\n    public amount: number;\r\n    public viewType: typeof ViewType = ViewType;\r\n    public posList: { id: string; name: string; typeOf: string; }[];\r\n    public printers: typeof printers = printers;\r\n    public connectionType: typeof connectionType = connectionType;\r\n    public environment = environment;\r\n\r\n    constructor(\r\n        private store: Store<reducers.IState>,\r\n        private utilService: UtilService,\r\n        private masterService: MasterService,\r\n        private userService: UserService,\r\n        private formBuilder: FormBuilder,\r\n        private translate: TranslateService,\r\n        private orderService: OrderService,\r\n        private router: Router,\r\n        private qrcodeService: QRCodeService\r\n    ) { }\r\n\r\n    public async ngOnInit() {\r\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\r\n        this.user = this.store.pipe(select(reducers.getUser));\r\n        this.master = this.store.pipe(select(reducers.getMaster));\r\n        this.error = this.store.pipe(select(reducers.getError));\r\n        try {\r\n            await this.masterService.getSellers();\r\n            await this.createBaseForm();\r\n        } catch (error) {\r\n            console.error(error);\r\n            this.router.navigate(['/error']);\r\n        }\r\n        this.qrcodeService.openQRCodeReader({ cb: (data: string) => { console.log(data); } });\r\n    }\r\n\r\n    private async createBaseForm() {\r\n        this.baseForm = this.formBuilder.group({\r\n            sellerBranchCode: ['', [Validators.required]],\r\n            posId: ['', [Validators.required]],\r\n            printerType: ['', [Validators.required]],\r\n            printerIpAddress: [''],\r\n            isPurchaseCart: ['0', [\r\n                Validators.required,\r\n                Validators.pattern(/^[0-9]+$/)\r\n            ]],\r\n            viewType: ['', [\r\n                Validators.required\r\n            ]]\r\n        });\r\n        const user = await this.userService.getData();\r\n        if (user.seller !== undefined\r\n            && user.seller.location !== undefined) {\r\n            this.baseForm.controls.sellerBranchCode.setValue(user.seller.location.branchCode);\r\n        }\r\n        if (user.pos !== undefined) {\r\n            this.changePosList();\r\n            this.baseForm.controls.posId.setValue(user.pos.id);\r\n        }\r\n        if (user.printer !== undefined) {\r\n            this.baseForm.controls.printerType.setValue(user.printer.connectionType);\r\n            this.baseForm.controls.printerIpAddress.setValue(user.printer.ipAddress);\r\n        }\r\n        this.baseForm.controls.isPurchaseCart.setValue((user.isPurchaseCart) ? '1' : '0');\r\n        this.baseForm.controls.viewType.setValue(user.viewType);\r\n    }\r\n\r\n    /**\r\n     * 端末情報変更\r\n     */\r\n    public changePosList() {\r\n        this.baseForm.controls.posId.setValue('');\r\n        const sellerBranchCode = this.baseForm.controls.sellerBranchCode.value;\r\n        if (sellerBranchCode === '') {\r\n            this.posList = [];\r\n            return;\r\n        }\r\n        this.master.subscribe((master) => {\r\n            const findTheater =\r\n                master.sellers.find(theater =>\r\n                    (theater.location !== undefined && theater.location.branchCode === sellerBranchCode)\r\n                );\r\n            if (findTheater === undefined) {\r\n                this.posList = [];\r\n                return;\r\n            }\r\n            this.posList = (findTheater.hasPOS === undefined) ? [] : findTheater.hasPOS;\r\n        }).unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * 更新\r\n     */\r\n    public async updateBase() {\r\n        Object.keys(this.baseForm.controls).forEach((key) => {\r\n            this.baseForm.controls[key].markAsTouched();\r\n        });\r\n        if (this.baseForm.invalid) {\r\n            this.utilService.openAlert({\r\n                title: this.translate.instant('common.error'),\r\n                body: this.translate.instant('setting.alert.validation')\r\n            });\r\n            return;\r\n        }\r\n        const master = await this.masterService.getData();\r\n        const findSeller = master.sellers.find((s) =>\r\n            (s.location !== undefined && s.location.branchCode === this.baseForm.controls.sellerBranchCode.value));\r\n        let findPos;\r\n        if (findSeller !== undefined && findSeller.hasPOS !== undefined) {\r\n            findPos = findSeller.hasPOS.find((pos: any) => {\r\n                return pos.id === this.baseForm.controls.posId.value;\r\n            });\r\n            if (findPos === undefined) {\r\n                return;\r\n            }\r\n        }\r\n        const isPurchaseCart = (this.baseForm.controls.isPurchaseCart.value === '1') ? true : false;\r\n        const viewType = this.baseForm.controls.viewType.value;\r\n        this.userService.updateBaseSetting({\r\n            seller: findSeller,\r\n            pos: findPos,\r\n            printer: {\r\n                ipAddress: this.baseForm.controls.printerIpAddress.value,\r\n                connectionType: this.baseForm.controls.printerType.value\r\n            },\r\n            isPurchaseCart,\r\n            viewType\r\n        });\r\n        this.utilService.openAlert({\r\n            title: this.translate.instant('common.complete'),\r\n            body: this.translate.instant('setting.alert.success')\r\n        });\r\n    }\r\n\r\n    public async print() {\r\n        try {\r\n            const printer = {\r\n                connectionType: this.baseForm.controls.printerType.value,\r\n                ipAddress: this.baseForm.controls.printerIpAddress.value\r\n            };\r\n            await this.orderService.print({ orders: [], printer });\r\n        } catch (error) {\r\n            console.error(error);\r\n            this.utilService.openAlert({\r\n                title: this.translate.instant('common.error'),\r\n                body: `\r\n                <p class=\"mb-4\">${this.translate.instant('setting.alert.print')}</p>\r\n                <div class=\"p-3 bg-light-gray select-text error\">\r\n                    <code>${error}</code>\r\n                </div>`\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * プリンター変更\r\n     */\r\n    public changePrinterType() {\r\n        if (this.baseForm.controls.printerType.value === connectionType.StarBluetooth) {\r\n            this.baseForm.controls.printerIpAddress.setValue(this.translate.instant('setting.starBluetoothAddress'));\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\r\nimport { SettingComponent } from './pages/setting/setting.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BaseComponent,\r\n    children: [\r\n      { path: '', component: SettingComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { SettingComponent } from './pages/setting/setting.component';\r\nimport { SettingRoutingModule } from './setting-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SettingRoutingModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class SettingModule { }\r\n"],"sourceRoot":"webpack:///"}