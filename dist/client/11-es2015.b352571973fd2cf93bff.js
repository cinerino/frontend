(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{Bvgf:function(t,e,n){"use strict";n.r(e),e.default=".order-form {\n  max-width: 768px;\n}"},SMZt:function(t,e,n){"use strict";n.r(e),e.default='<div class="contents-width mx-auto px-3 py-5">\n    <form [formGroup]="inputForm">\n        <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'order.money.transfer.confirm.title\' | translate }}\n        </h2>\n        <div *ngIf="(order | async)?.order.orderStatus === orderStatus.OrderReturned">\n            <p class="mb-4 text-md-center" [innerHTML]="\'order.money.transfer.confirm.canceled\' | translate"></p>\n        </div>\n        <div class="order-form mx-auto" *ngIf="(order | async)?.order.orderStatus !== orderStatus.OrderReturned">\n            <p class="mb-4 text-md-center" [innerHTML]="\'order.money.transfer.confirm.read\' | translate"></p>\n            <app-order-detail [order]="(order | async)?.order" [customer]="false">\n            </app-order-detail>\n\n            <div class="mx-auto p-3 bg-white mb-4">\n                <div class="form-group mb-0">\n                    <div class="container px-0">\n                        <div class="row align-items-center">\n                            <div class="col-md-4 col-12">\n                                <label class="mb-2 mb-md-0" for="">{{ \'order.money.transfer.confirm.accountNumber\' |\n                                    translate }}</label>\n                            </div>\n                            <div class="col-md-8 col-12">\n                                \x3c!-- <input type="text" class="form-control" formControlName="accountNumber"\n                                    id="accountNumber"> --\x3e\n                                <div class="input-group">\n                                    <input type="text" class="form-control" formControlName="accountNumber"\n                                        id="accountNumber">\n                                    <div class="input-group-append" (click)="openQRReader()">\n                                        <span class="input-group-text"><i class="fas fa-camera"></i></span>\n                                    </div>\n                                </div>\n                                <div *ngIf="inputForm.controls.accountNumber.invalid && inputForm.controls.accountNumber.touched"\n                                    class="mt-2">\n                                    <p *ngIf="inputForm.controls.accountNumber.errors?.required" class="text-danger">\n                                        {{ \'form.validation.required\' | translate }}</p>\n                                    <p *ngIf="inputForm.controls.accountNumber.errors?.minlength" class="text-danger">\n                                        {{ \'form.validation.minlength\' | translate: { value:\n                                        inputForm.controls.accountNumber.errors?.minlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf="inputForm.controls.accountNumber.errors?.maxlength" class="text-danger">\n                                        {{ \'form.validation.maxlength\' | translate: { value:\n                                        inputForm.controls.accountNumber.errors?.maxlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf="inputForm.controls.accountNumber.errors?.pattern" class="text-danger">\n                                        {{ \'form.validation.number\' | translate }}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n\n        <div class="buttons mx-auto text-center">\n            <div *ngIf="(order | async)?.order.orderStatus !== orderStatus.OrderReturned">\n                <button [disabled]="(isLoading | async) || inputForm.invalid" type="button"\n                    class="btn btn-primary btn-block py-3 mb-3" (click)="transfer()">{{\n                    \'order.money.transfer.confirm.next\' | translate }}</button>\n            </div>\n            <button *ngIf="theaterCode" type="button" class="btn btn-outline-primary btn-block py-3"\n                [routerLink]="\'/order/money/transfer/\' + theaterCode + \'/input\'">{{ \'order.money.transfer.confirm.prev\'\n                | translate }}</button>\n            <button *ngIf="!theaterCode" type="button" class="btn btn-outline-primary btn-block py-3"\n                routerLink="/order/money/transfer/input">{{ \'order.money.transfer.confirm.prev\' | translate }}</button>\n        </div>\n    </form>\n</div>'},UFRI:function(t,e,n){"use strict";n.r(e),e.default='<div class="contents-width mx-auto px-3 py-5">\n    <form [formGroup]="inputForm">\n        <div class="mb-4">\n            <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'order.money.transfer.input.title\' | translate }}</h2>\n            <p class="mb-4 text-md-center" [innerHTML]="\'order.money.transfer.input.read\' | translate"></p>\n\n            <div class="order-form mx-auto p-3 bg-white">\n\n                <div class="form-group">\n                    <label class="mb-2" for="">{{ \'common.confirmationNumber\' | translate }}</label>\n                    <app-numeric-keypad *ngIf="environment.INQUIRY_INPUT_KEYPAD" inputType="string"\n                        [inputValue]="inputForm.controls.confirmationNumber.value"\n                        (change)="changeConfirmationNumber($event)">\n                        <input type="text" class="form-control" formControlName="confirmationNumber"\n                            id="confirmationNumber" [placeholder]="\'form.placeholder.confirmationNumber\' | translate"\n                            readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf="!environment.INQUIRY_INPUT_KEYPAD" type="text" class="form-control"\n                        formControlName="confirmationNumber" id="confirmationNumber"\n                        [placeholder]="\'form.placeholder.confirmationNumber\' | translate">\n                    <div *ngIf="inputForm.controls.confirmationNumber.invalid && inputForm.controls.confirmationNumber.touched"\n                        class="mt-2">\n                        <p *ngIf="inputForm.controls.confirmationNumber.errors?.required" class="text-danger">\n                            {{ \'form.validation.required\' | translate }}</p>\n                        <p *ngIf="inputForm.controls.confirmationNumber.errors?.pattern" class="text-danger">\n                            {{ \'form.validation.number\' | translate }}</p>\n                    </div>\n                </div>\n                <div class="form-group mb-0">\n                    <label class="mb-2" for="">{{ \'form.label.telephone\' | translate }}</label>\n                    <div class="position-relative" *ngIf="environment.INQUIRY_INPUT_KEYPAD">\n                        <app-numeric-keypad inputType="telephone"\n                            [inputValue]="inputForm.controls.telephone.value" (change)="changeTelephone($event)">\n                            <input [type]="(isPasswordMask) ? \'password\' : \'text\'" class="form-control" formControlName="telephone" id="telephone"\n                                [placeholder]="\'form.placeholder.telephone\' | translate" readonly>\n                        </app-numeric-keypad>\n                        <button type="button" class="btn position-absolute" style="top: 0; right: 0;" (click)="changePassWordMask()">\n                            <i *ngIf="isPasswordMask" class="fas fa-eye"></i>\n                            <i *ngIf="!isPasswordMask" class="fas fa-eye-slash"></i>\n                        </button>\n                    </div>\n                    <div class="position-relative" *ngIf="!environment.INQUIRY_INPUT_KEYPAD">\n                        <ngx-intl-tel-input\n                            #intlTelInput\n                            [cssClass]="\'form-control text-security-disc\'"\n                            [preferredCountries]="[CountryISO.Japan]"\n                            [enableAutoCountrySelect]="false"\n                            [enablePlaceholder]="true"\n                            [searchCountryFlag]="true"\n                            [searchCountryField]="[SearchCountryField.Iso2, SearchCountryField.Name]"\n                            [selectFirstCountry]="false"\n                            [selectedCountryISO]="CountryISO.Japan"\n                            [maxLength]="15"\n                            [tooltipField]="TooltipLabel.Name"\n                            [phoneValidation]="true"\n                            [separateDialCode]="false"\n                            name="telephone"\n                            formControlName="telephone"\n                            type="password"></ngx-intl-tel-input>\n                            <button type="button" class="btn position-absolute" style="top: 0; right: 0;" (click)="changePassWordMask()">\n                                <i *ngIf="isPasswordMask" class="fas fa-eye"></i>\n                                <i *ngIf="!isPasswordMask" class="fas fa-eye-slash"></i>\n                            </button>\n                    </div>\n                    \x3c!-- <input *ngIf="!environment.INQUIRY_INPUT_KEYPAD" type="password" class="form-control"\n                        formControlName="telephone" id="telephone"\n                        [placeholder]="\'form.placeholder.telephone\' | translate"> --\x3e\n                    <div *ngIf="inputForm.controls.telephone.invalid && inputForm.controls.telephone.touched"\n                        class="mt-2">\n                        <p *ngIf="inputForm.controls.telephone.errors?.required" class="text-danger">\n                            {{ \'form.validation.required\' | translate }}</p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.minlength" class="text-danger">\n                            {{ \'form.validation.minlength\' | translate: { value: inputForm.controls.telephone.errors?.minlength.requiredLength } }}\n                        </p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.maxlength" class="text-danger">\n                            {{ \'form.validation.maxlength\' | translate: { value: inputForm.controls.telephone.errors?.maxlength.requiredLength } }}\n                        </p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.pattern" class="text-danger">\n                            {{ \'form.validation.number\' | translate }}</p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.telephone" class="text-danger">\n                            {{ \'form.validation.telephone\' | translate }}</p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.validatePhoneNumber" class="text-danger">\n                            {{ \'form.validation.telephone\' | translate }}\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class="buttons mx-auto text-center">\n            <button type="submit" [disabled]="isLoading | async" class="btn btn-primary btn-block py-3 mb-3"\n                (click)="onSubmit()">{{ \'order.money.transfer.input.next\' | translate }}</button>\n            <a *ngIf="environment.PORTAL_SITE_URL" class="btn btn-outline-primary btn-block py-3 portal-link"\n                [href]="environment.PORTAL_SITE_URL">{{ \'order.money.transfer.input.prev\' | translate }}</a>\n            <button *ngIf="!environment.PORTAL_SITE_URL" type="button" class="btn btn-outline-primary btn-block py-3"\n                routerLink="/">{{ \'order.money.transfer.input.prev\' | translate }}</button>\n        </div>\n    </form>\n</div>'},ZGYQ:function(t,e,n){"use strict";n.r(e),e.default=""},cfg2:function(t,e,n){"use strict";n.r(e),n.d(e,"OrderModule",(function(){return U}));var r=n("2kYt"),o=n("EM62"),a=n("DSWM"),i=n("sEIs"),s=n("sN6X"),c=n("PIN6"),l=n("cHUu"),u=n("mOXJ"),p=function(t,e,n,r){var o,a=arguments.length,i=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(i=(a<3?o(i):a>3?o(e,n,i):o(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i},d=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},m=function(t,e,n,r){return new(n||(n=Promise))((function(o,a){function i(t){try{c(r.next(t))}catch(e){a(e)}}function s(t){try{c(r.throw(t))}catch(e){a(e)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,s)}c((r=r.apply(t,e||[])).next())}))},f=function(t){return t&&t.__esModule?t:{default:t}};let h=class{constructor(t,e,n){this.store=t,this.actionService=e,this.activatedRoute=n,this.environment=Object(c.a)()}ngOnInit(){return m(this,void 0,void 0,(function*(){this.isLoading=this.store.pipe(Object(s.m)(u.b)),this.theaterCode=this.activatedRoute.snapshot.params.theaterCode,this.actionService.order.delete()}))}};h.ctorParameters=()=>[{type:s.b},{type:l.a},{type:i.a}],h=p([Object(o.n)({selector:"app-order-money-transfer-complete",template:f(n("r1b2")).default,styles:[f(n("ZGYQ")).default]}),d("design:paramtypes",[s.b,l.a,i.a])],h);var b=n("nIj0"),v=n("icHh"),y=n("s2Ay"),g=n("wgY5"),I=function(t,e,n,r){var o,a=arguments.length,i=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(i=(a<3?o(i):a>3?o(e,n,i):o(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i},x=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},R=function(t,e,n,r){return new(n||(n=Promise))((function(o,a){function i(t){try{c(r.next(t))}catch(e){a(e)}}function s(t){try{c(r.throw(t))}catch(e){a(e)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,s)}c((r=r.apply(t,e||[])).next())}))},N=function(t){return t&&t.__esModule?t:{default:t}};let F=class{constructor(t,e,n,r,o,a,i,s){this.store=t,this.router=e,this.utilService=n,this.actionService=r,this.translate=o,this.activatedRoute=a,this.formBuilder=i,this.qrcodeService=s,this.moment=g,this.orderStatus=v.factory.orderStatus,this.environment=Object(c.a)()}ngOnInit(){return R(this,void 0,void 0,(function*(){this.isLoading=this.store.pipe(Object(s.m)(u.b)),this.error=this.store.pipe(Object(s.m)(u.a)),this.order=this.store.pipe(Object(s.m)(u.d)),this.theaterCode=this.activatedRoute.snapshot.params.theaterCode,this.createInputForm();try{const t=(yield this.actionService.order.getData()).order;if(void 0===t)throw new Error("order undefined");if(void 0!==t.acceptedOffers.find(t=>t.itemOffered.typeOf!==v.factory.chevre.reservationType.EventReservation))throw new Error("not EventReservation")}catch(t){console.error(t),this.router.navigate(["/error"])}}))}createInputForm(){this.inputForm=this.formBuilder.group({accountNumber:["",[b.k.required,b.k.pattern(/^[0-9]+$/)]]})}transfer(){Object.keys(this.inputForm.controls).forEach(t=>{this.inputForm.controls[t].markAsTouched()}),this.inputForm.controls.accountNumber.setValue(document.getElementById("accountNumber").value),this.inputForm.invalid||this.utilService.openConfirm({title:this.translate.instant("common.confirm"),body:this.translate.instant("order.money.transfer.confirm.confirm.transfer"),cb:()=>R(this,void 0,void 0,(function*(){try{const{order:t}=yield this.actionService.order.getData();if(void 0===t)throw new Error("order === undefined");if(yield this.actionService.order.moneyTransfer({order:t,toLocation:{typeOf:"Account",identifier:this.inputForm.controls.accountNumber.value},amount:{typeOf:"MonetaryAmount",value:1,currency:"Point"}}),void 0!==this.theaterCode)return void this.router.navigate([`/order/money/transfer/${this.theaterCode}/complete`]);this.router.navigate(["/order/money/transfer/complete"])}catch(t){this.utilService.openAlert({title:this.translate.instant("common.error"),body:`\n                        <p class="mb-4">${this.translate.instant("order.money.transfer.confirm.alert.transfer")}</p>\n                        <div class="p-3 bg-light-gray select-text error">\n                            <code>${t}</code>\n                        </div>`})}}))})}openQRReader(){this.qrcodeService.openQRCodeReader({cb:t=>{const e=t;this.inputForm.controls.accountNumber.setValue(e)}})}};F.ctorParameters=()=>[{type:s.b},{type:i.c},{type:l.g},{type:l.a},{type:y.c},{type:i.a},{type:b.b},{type:l.e}],F=I([Object(o.n)({selector:"app-order-money-transfer-confirm",template:N(n("SMZt")).default,styles:[N(n("Bvgf")).default]}),x("design:paramtypes",[s.b,i.c,l.g,l.a,y.c,i.a,b.b,l.e])],F);var P=n("WxsR"),O=n("ddJ1"),k=function(t,e,n,r){var o,a=arguments.length,i=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(i=(a<3?o(i):a>3?o(e,n,i):o(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i},w=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},C=function(t,e,n,r){return new(n||(n=Promise))((function(o,a){function i(t){try{c(r.next(t))}catch(e){a(e)}}function s(t){try{c(r.throw(t))}catch(e){a(e)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,s)}c((r=r.apply(t,e||[])).next())}))},T=function(t){return t&&t.__esModule?t:{default:t}};let S=class{constructor(t,e,n,r,o,a,i){this.store=t,this.formBuilder=e,this.utilService=n,this.actionService=r,this.activatedRoute=o,this.router=a,this.translate=i,this.environment=Object(c.a)(),this.SearchCountryField=O.c,this.TooltipLabel=O.d,this.CountryISO=O.a}ngOnInit(){this.isLoading=this.store.pipe(Object(s.m)(u.b)),this.theaterCode=this.activatedRoute.snapshot.params.theaterCode,this.createInputForm(),setTimeout(()=>{if(void 0===this.intlTelInput)return;const t=this.intlTelInput.allCountries.find(t=>t.iso2===O.a.Japan);void 0!==t&&(t.placeHolder=this.translate.instant("form.placeholder.telephone"))},0)}createInputForm(){this.inputForm=this.formBuilder.group({confirmationNumber:["",[b.k.required,b.k.pattern(/^[0-9]+$/)]],telephone:["",this.environment.INQUIRY_INPUT_KEYPAD?[b.k.required,b.k.maxLength(15),b.k.minLength(9),t=>{const e=t.root.get("telephone");if(null!==e){if(""===e.value)return null;const t=new RegExp(/^\+/).test(e.value)?P.c(e.value):P.c(e.value,"JP");if(void 0===t.phone)return{telephone:!0};if(!P.b(t))return{telephone:!0}}return null}]:[b.k.required]]})}onSubmit(){return C(this,void 0,void 0,(function*(){if(Object.keys(this.inputForm.controls).forEach(t=>{this.inputForm.controls[t].markAsTouched()}),this.inputForm.controls.confirmationNumber.setValue(document.getElementById("confirmationNumber").value),this.environment.INQUIRY_INPUT_KEYPAD&&this.inputForm.controls.telephone.setValue(document.getElementById("telephone").value),this.inputForm.invalid)return;const t=this.inputForm.controls.confirmationNumber.value,e=this.environment.INQUIRY_INPUT_KEYPAD?this.inputForm.controls.telephone.value:this.inputForm.controls.telephone.value.e164Number;try{if(yield this.actionService.order.inquiry({theaterCode:this.theaterCode,confirmationNumber:t,customer:{telephone:e}}),void 0!==this.theaterCode)return void this.router.navigate([`/order/money/transfer/${this.theaterCode}/confirm`]);this.router.navigate(["/order/money/transfer/confirm"])}catch(n){console.error(n),this.utilService.openAlert({title:this.translate.instant("common.error"),body:this.translate.instant("inquiry.input.validation")})}}))}changeConfirmationNumber(t){this.inputForm.controls.confirmationNumber.setValue(t)}changeTelephone(t){this.inputForm.controls.telephone.setValue(t)}changePassWordMask(){this.isPasswordMask=!this.isPasswordMask,void 0!==this.intlTelInput&&(this.intlTelInput.cssClass=this.isPasswordMask?"form-control text-security-disc":"form-control")}};S.ctorParameters=()=>[{type:s.b},{type:b.b},{type:l.g},{type:l.a},{type:i.a},{type:i.c},{type:y.c}],S.propDecorators={intlTelInput:[{type:o.lb,args:["intlTelInput"]}]},S=k([Object(o.n)({selector:"app-order-money-transfer-input",template:T(n("UFRI")).default,styles:[T(n("v1Hq")).default]}),w("design:paramtypes",[s.b,b.b,l.g,l.a,i.a,i.c,y.c])],S);var L=function(t,e,n,r){var o,a=arguments.length,i=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(i=(a<3?o(i):a>3?o(e,n,i):o(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i};const _=[{path:"",component:n("RRjC").a,children:[{path:"money/transfer",children:[{path:"input",component:S},{path:"confirm",component:F},{path:"complete",component:h},{path:":theaterCode/input",component:S},{path:":theaterCode/confirm",component:F},{path:":theaterCode/complete",component:h}]}]}];let j=class{};j=L([Object(o.K)({imports:[i.d.forChild(_)],exports:[i.d]})],j);var E=function(t,e,n,r){var o,a=arguments.length,i=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(i=(a<3?o(i):a>3?o(e,n,i):o(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i};let U=class{};U=E([Object(o.K)({declarations:[h,F,S],imports:[r.c,j,a.a]})],U)},r1b2:function(t,e,n){"use strict";n.r(e),e.default='<div class="contents-width mx-auto px-3 py-5">\n    <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'order.money.transfer.complete.title\' | translate }}\n    </h2>\n    <p class="mb-4 text-md-center" [innerHTML]="\'order.money.transfer.complete.read\' | translate"></p>\n\n\n    <div class="buttons mx-auto text-center">\n        <a *ngIf="environment.PORTAL_SITE_URL" class="btn btn-outline-primary btn-block py-3 portal-link"\n            [href]="environment.PORTAL_SITE_URL">{{ \'order.money.transfer.complete.prev\' | translate }}</a>\n        <button *ngIf="!environment.PORTAL_SITE_URL && theaterCode" type="button" class="btn btn-outline-primary btn-block py-3"\n        [routerLink]="\'/order/money/transfer/\' + theaterCode + \'/input\'">{{ \'order.money.transfer.complete.prev\' | translate }}</button>\n        <button *ngIf="!environment.PORTAL_SITE_URL && !theaterCode" type="button" class="btn btn-outline-primary btn-block py-3"\n            routerLink="/order/money/transfer/input">{{ \'order.money.transfer.complete.prev\' | translate }}</button>\n    </div>\n</div>'},v1Hq:function(t,e,n){"use strict";n.r(e),e.default=".order-form {\n  max-width: 500px;\n}"}}]);