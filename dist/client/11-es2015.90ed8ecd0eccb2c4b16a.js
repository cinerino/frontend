(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"9q5l":function(t,e,n){"use strict";n.r(e),e.default='<div class="contents-width mx-auto px-3 py-5">\n    <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'order.point.transfer.complete.title\' | translate }}</h2>\n    <p class="mb-4 text-md-center" [innerHTML]="\'order.point.transfer.complete.read\' | translate"></p>\n\n\n    <div class="buttons mx-auto text-center">\n        <a *ngIf="environment.PORTAL_SITE_URL" class="btn btn-outline-primary btn-block py-3 portal-link"\n            [href]="environment.PORTAL_SITE_URL">{{ \'order.point.transfer.complete.prev\' | translate }}</a>\n        <button *ngIf="!environment.PORTAL_SITE_URL" type="button" class="btn btn-outline-primary btn-block py-3"\n            routerLink="/order/point/transfer/input">{{ \'order.point.transfer.complete.prev\' | translate }}</button>\n    </div>\n</div>'},H3c9:function(t,e,n){"use strict";n.r(e),e.default=".order-form {\n  max-width: 500px;\n}"},UDwU:function(t,e,n){"use strict";n.r(e),e.default='<div class="contents-width mx-auto px-3 py-5">\n    <form [formGroup]="inputForm">\n        <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'order.point.transfer.confirm.title\' | translate }}\n        </h2>\n        <div *ngIf="(order | async)?.order.orderStatus === orderStatus.OrderReturned">\n            <p class="mb-4 text-md-center" [innerHTML]="\'order.point.transfer.confirm.canceled\' | translate"></p>\n        </div>\n        <div class="order-form mx-auto" *ngIf="(order | async)?.order.orderStatus !== orderStatus.OrderReturned">\n            <p class="mb-4 text-md-center" [innerHTML]="\'order.point.transfer.confirm.read\' | translate"></p>\n            <app-order-detail [order]="(order | async)?.order" [customer]="false">\n            </app-order-detail>\n\n            <div class="mx-auto p-3 bg-white mb-4">\n                <div class="form-group mb-0">\n                    <div class="container px-0">\n                        <div class="row align-items-center">\n                            <div class="col-md-4 col-12">\n                                <label class="mb-2 mb-md-0"\n                                    for="">{{ \'order.point.transfer.confirm.accountNumber\' | translate }}</label>\n                            </div>\n                            <div class="col-md-8 col-12">\n                                <input type="text" class="form-control" formControlName="accountNumber"\n                                    id="accountNumber">\n                                <div *ngIf="inputForm.controls.accountNumber.invalid && inputForm.controls.accountNumber.touched"\n                                    class="mt-2">\n                                    <p *ngIf="inputForm.controls.accountNumber.errors?.required" class="text-danger">\n                                        {{ \'form.validation.required\' | translate }}</p>\n                                    <p *ngIf="inputForm.controls.accountNumber.errors?.minlength" class="text-danger">\n                                        {{ \'form.validation.minlength\' | translate: { value: inputForm.controls.accountNumber.errors?.minlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf="inputForm.controls.accountNumber.errors?.maxlength" class="text-danger">\n                                        {{ \'form.validation.maxlength\' | translate: { value: inputForm.controls.accountNumber.errors?.maxlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf="inputForm.controls.accountNumber.errors?.pattern" class="text-danger">\n                                        {{ \'form.validation.number\' | translate }}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n\n        <div class="buttons mx-auto text-center">\n            <div *ngIf="(order | async)?.order.orderStatus !== orderStatus.OrderReturned">\n                <button\n                    [disabled]="(isLoading | async) || inputForm.invalid" type="button"\n                    class="btn btn-primary btn-block py-3 mb-3"\n                    (click)="transfer()">{{ \'order.point.transfer.confirm.next\' | translate }}</button>\n            </div>\n            <button type="button" class="btn btn-outline-primary btn-block py-3"\n                routerLink="/order/point/transfer/input">{{ \'order.point.transfer.confirm.prev\' | translate }}</button>\n        </div>\n    </form>\n</div>'},cfg2:function(t,e,n){"use strict";n.r(e),n.d(e,"OrderModule",(function(){return E}));var r=n("2kYt"),o=n("EM62"),i=n("DSWM"),a=n("sN6X"),s=n("PIN6"),l=n("cHUu"),c=n("mOXJ"),u=function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a},p=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},m=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{l(r.next(t))}catch(e){i(e)}}function s(t){try{l(r.throw(t))}catch(e){i(e)}}function l(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}l((r=r.apply(t,e||[])).next())}))},d=function(t){return t&&t.__esModule?t:{default:t}};let f=class{constructor(t,e){this.store=t,this.actionService=e,this.environment=Object(s.a)()}ngOnInit(){return m(this,void 0,void 0,(function*(){this.isLoading=this.store.pipe(Object(a.m)(c.b)),this.actionService.order.delete()}))}};f.ctorParameters=()=>[{type:a.b},{type:l.a}],f=u([Object(o.n)({selector:"app-order-point-transfer-complete",template:d(n("9q5l")).default,styles:[d(n("oOOE")).default]}),p("design:paramtypes",[a.b,l.a])],f);var h=n("nIj0"),b=n("sEIs"),v=n("icHh"),y=n("s2Ay"),g=n("wgY5"),I=function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a},x=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},N=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{l(r.next(t))}catch(e){i(e)}}function s(t){try{l(r.throw(t))}catch(e){i(e)}}function l(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}l((r=r.apply(t,e||[])).next())}))},R=function(t){return t&&t.__esModule?t:{default:t}};let F=class{constructor(t,e,n,r,o,i,a){this.store=t,this.router=e,this.utilService=n,this.actionService=r,this.translate=o,this.activatedRoute=i,this.formBuilder=a,this.moment=g,this.orderStatus=v.factory.orderStatus,this.environment=Object(s.a)()}ngOnInit(){return N(this,void 0,void 0,(function*(){this.isLoading=this.store.pipe(Object(a.m)(c.b)),this.error=this.store.pipe(Object(a.m)(c.a)),this.order=this.store.pipe(Object(a.m)(c.d)),this.createInputForm();try{if(void 0===(yield this.actionService.order.getData()).order)throw new Error("order undefined")}catch(t){console.error(t),this.router.navigate(["/error"])}}))}createInputForm(){this.inputForm=this.formBuilder.group({accountNumber:["",[h.k.required,h.k.pattern(/^[0-9]+$/)]]});const t=this.activatedRoute.snapshot.params.accountNumber;void 0!==t&&this.inputForm.controls.accountNumber.setValue(t)}transfer(){this.utilService.openConfirm({title:this.translate.instant("common.confirm"),body:this.translate.instant("order.point.transfer.confirm.confirm.transfer"),cb:()=>N(this,void 0,void 0,(function*(){try{this.router.navigate(["/order/point/transfer/complete"])}catch(t){this.utilService.openAlert({title:this.translate.instant("common.error"),body:`\n                        <p class="mb-4">${this.translate.instant("inquiry.confirm.alert.transfer")}</p>\n                        <div class="p-3 bg-light-gray select-text error">\n                            <code>${t}</code>\n                        </div>`})}}))})}};F.ctorParameters=()=>[{type:a.b},{type:b.c},{type:l.g},{type:l.a},{type:y.c},{type:b.a},{type:h.b}],F=I([Object(o.n)({selector:"app-order-point-transfer-confirm",template:R(n("UDwU")).default,styles:[R(n("kG0s")).default]}),x("design:paramtypes",[a.b,b.c,l.g,l.a,y.c,b.a,h.b])],F);var O=n("WxsR"),P=n("ddJ1"),w=function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a},T=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},S=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function a(t){try{l(r.next(t))}catch(e){i(e)}}function s(t){try{l(r.throw(t))}catch(e){i(e)}}function l(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}l((r=r.apply(t,e||[])).next())}))},j=function(t){return t&&t.__esModule?t:{default:t}};let _=class{constructor(t,e,n,r,o,i,a){this.store=t,this.formBuilder=e,this.utilService=n,this.actionService=r,this.activatedRoute=o,this.router=i,this.translate=a,this.environment=Object(s.a)(),this.SearchCountryField=P.c,this.TooltipLabel=P.d,this.CountryISO=P.a}ngOnInit(){this.isLoading=this.store.pipe(Object(a.m)(c.b)),this.createInputForm(),setTimeout(()=>{if(void 0===this.intlTelInput)return;const t=this.intlTelInput.allCountries.find(t=>t.iso2===P.a.Japan);void 0!==t&&(t.placeHolder=this.translate.instant("form.placeholder.telephone"))},0)}createInputForm(){this.inputForm=this.formBuilder.group({confirmationNumber:["",[h.k.required,h.k.pattern(/^[0-9]+$/)]],telephone:["",this.environment.INQUIRY_INPUT_KEYPAD?[h.k.required,h.k.maxLength(15),h.k.minLength(9),t=>{const e=t.root.get("telephone");if(null!==e){if(""===e.value)return null;const t=new RegExp(/^\+/).test(e.value)?O.c(e.value):O.c(e.value,"JP");if(void 0===t.phone)return{telephone:!0};if(!O.b(t))return{telephone:!0}}return null}]:[h.k.required]]});const t=this.activatedRoute.snapshot.params.confirmationNumber;void 0!==t&&this.inputForm.controls.confirmationNumber.setValue(t)}onSubmit(){return S(this,void 0,void 0,(function*(){if(Object.keys(this.inputForm.controls).forEach(t=>{this.inputForm.controls[t].markAsTouched()}),this.inputForm.controls.confirmationNumber.setValue(document.getElementById("confirmationNumber").value),this.environment.INQUIRY_INPUT_KEYPAD&&this.inputForm.controls.telephone.setValue(document.getElementById("telephone").value),this.inputForm.invalid)return;const t=this.inputForm.controls.confirmationNumber.value,e=this.environment.INQUIRY_INPUT_KEYPAD?this.inputForm.controls.telephone.value:this.inputForm.controls.telephone.value.e164Number;try{yield this.actionService.order.inquiry({confirmationNumber:t,customer:{telephone:e}}),this.router.navigate(["/order/point/transfer/confirm"])}catch(n){console.error(n),this.utilService.openAlert({title:this.translate.instant("common.error"),body:this.translate.instant("inquiry.input.validation")})}}))}changeConfirmationNumber(t){this.inputForm.controls.confirmationNumber.setValue(t)}changeTelephone(t){this.inputForm.controls.telephone.setValue(t)}};_.ctorParameters=()=>[{type:a.b},{type:h.b},{type:l.g},{type:l.a},{type:b.a},{type:b.c},{type:y.c}],_.propDecorators={intlTelInput:[{type:o.lb,args:["intlTelInput"]}]},_=w([Object(o.n)({selector:"app-order-point-transfer-input",template:j(n("qNXV")).default,styles:[j(n("H3c9")).default]}),T("design:paramtypes",[a.b,h.b,l.g,l.a,b.a,b.c,y.c])],_);var k=function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a};const L=[{path:"",component:n("RRjC").a,children:[{path:"point/transfer",children:[{path:"input",component:_},{path:"confirm",component:F},{path:"complete",component:f}]}]}];let U=class{};U=k([Object(o.K)({imports:[b.d.forChild(L)],exports:[b.d]})],U);var C=function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a};let E=class{};E=C([Object(o.K)({declarations:[f,F,_],imports:[r.c,U,i.a]})],E)},kG0s:function(t,e,n){"use strict";n.r(e),e.default=".order-form {\n  max-width: 768px;\n}"},oOOE:function(t,e,n){"use strict";n.r(e),e.default=""},qNXV:function(t,e,n){"use strict";n.r(e),e.default='<div class="contents-width mx-auto px-3 py-5">\n    <form [formGroup]="inputForm">\n        <div class="mb-4">\n            <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'order.point.transfer.input.title\' | translate }}</h2>\n            <p class="mb-4 text-md-center" [innerHTML]="\'order.point.transfer.input.read\' | translate"></p>\n\n            <div class="order-form mx-auto p-3 bg-white">\n\n                <div class="form-group">\n                    <label class="mb-2" for="">{{ \'common.confirmationNumber\' | translate }}</label>\n                    <app-numeric-keypad *ngIf="environment.INQUIRY_INPUT_KEYPAD" inputType="string"\n                        [inputValue]="inputForm.controls.confirmationNumber.value"\n                        (change)="changeConfirmationNumber($event)">\n                        <input type="text" class="form-control" formControlName="confirmationNumber"\n                            id="confirmationNumber" [placeholder]="\'form.placeholder.confirmationNumber\' | translate"\n                            readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf="!environment.INQUIRY_INPUT_KEYPAD" type="text" class="form-control"\n                        formControlName="confirmationNumber" id="confirmationNumber"\n                        [placeholder]="\'form.placeholder.confirmationNumber\' | translate">\n                    <div *ngIf="inputForm.controls.confirmationNumber.invalid && inputForm.controls.confirmationNumber.touched"\n                        class="mt-2">\n                        <p *ngIf="inputForm.controls.confirmationNumber.errors?.required" class="text-danger">\n                            {{ \'form.validation.required\' | translate }}</p>\n                        <p *ngIf="inputForm.controls.confirmationNumber.errors?.pattern" class="text-danger">\n                            {{ \'form.validation.number\' | translate }}</p>\n                    </div>\n                </div>\n                <div class="form-group mb-0">\n                    <label class="mb-2" for="">{{ \'form.label.telephone\' | translate }}</label>\n                    <app-numeric-keypad *ngIf="environment.INQUIRY_INPUT_KEYPAD" inputType="telephone"\n                        [inputValue]="inputForm.controls.telephone.value" (change)="changeTelephone($event)">\n                        <input type="password" class="form-control" formControlName="telephone" id="telephone"\n                            [placeholder]="\'form.placeholder.telephone\' | translate" readonly>\n                    </app-numeric-keypad>\n                    <ngx-intl-tel-input *ngIf="!environment.INQUIRY_INPUT_KEYPAD"\n                        #intlTelInput\n                        [cssClass]="\'form-control text-security-disc\'"\n                        [preferredCountries]="[CountryISO.Japan]"\n                        [enableAutoCountrySelect]="false"\n                        [enablePlaceholder]="true"\n                        [searchCountryFlag]="true"\n                        [searchCountryField]="[SearchCountryField.Iso2, SearchCountryField.Name]"\n                        [selectFirstCountry]="false"\n                        [selectedCountryISO]="CountryISO.Japan"\n                        [maxLength]="15"\n                        [tooltipField]="TooltipLabel.Name"\n                        [phoneValidation]="true"\n                        [separateDialCode]="false"\n                        name="telephone"\n                        formControlName="telephone"\n                        type="password"></ngx-intl-tel-input>\n                    \x3c!-- <input *ngIf="!environment.INQUIRY_INPUT_KEYPAD" type="password" class="form-control"\n                        formControlName="telephone" id="telephone"\n                        [placeholder]="\'form.placeholder.telephone\' | translate"> --\x3e\n                    <div *ngIf="inputForm.controls.telephone.invalid && inputForm.controls.telephone.touched"\n                        class="mt-2">\n                        <p *ngIf="inputForm.controls.telephone.errors?.required" class="text-danger">\n                            {{ \'form.validation.required\' | translate }}</p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.minlength" class="text-danger">\n                            {{ \'form.validation.minlength\' | translate: { value: inputForm.controls.telephone.errors?.minlength.requiredLength } }}\n                        </p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.maxlength" class="text-danger">\n                            {{ \'form.validation.maxlength\' | translate: { value: inputForm.controls.telephone.errors?.maxlength.requiredLength } }}\n                        </p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.pattern" class="text-danger">\n                            {{ \'form.validation.number\' | translate }}</p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.telephone" class="text-danger">\n                            {{ \'form.validation.telephone\' | translate }}</p>\n                        <p *ngIf="inputForm.controls.telephone.errors?.validatePhoneNumber" class="text-danger">\n                            {{ \'form.validation.telephone\' | translate }}\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class="buttons mx-auto text-center">\n            <button type="submit" [disabled]="isLoading | async" class="btn btn-primary btn-block py-3 mb-3"\n                (click)="onSubmit()">{{ \'order.point.transfer.input.next\' | translate }}</button>\n            <a *ngIf="environment.PORTAL_SITE_URL" class="btn btn-outline-primary btn-block py-3 portal-link"\n                [href]="environment.PORTAL_SITE_URL">{{ \'order.point.transfer.input.prev\' | translate }}</a>\n            <button *ngIf="!environment.PORTAL_SITE_URL" type="button" class="btn btn-outline-primary btn-block py-3"\n                routerLink="/">{{ \'order.point.transfer.input.prev\' | translate }}</button>\n        </div>\n    </form>\n</div>'}}]);