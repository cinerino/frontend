{"version":3,"sources":["./app/modules/order/components/pages/order-money-transfer-complete/order-money-transfer-complete.component.ts","./app/modules/order/components/pages/order-money-transfer-complete/order-money-transfer-complete.component.html","./app/modules/order/components/pages/order-money-transfer-confirm/order-money-transfer-confirm.component.ts","./app/modules/order/components/pages/order-money-transfer-confirm/order-money-transfer-confirm.component.html","./app/modules/order/components/pages/order-money-transfer-input/order-money-transfer-input.component.ts","./app/modules/order/components/pages/order-money-transfer-input/order-money-transfer-input.component.html","./app/modules/order/order-routing.module.ts","./app/modules/order/order.module.ts"],"names":[],"mappings":"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","file":"modules-order-order-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-order-money-transfer-complete',\n    templateUrl: './order-money-transfer-complete.component.html',\n    styleUrls: ['./order-money-transfer-complete.component.scss']\n})\nexport class OrderMoneyTransferCompleteComponent implements OnInit {\n    public isLoading: Observable<boolean>;\n    public environment = getEnvironment();\n    public theaterCode?: string;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private actionService: ActionService,\n        private activatedRoute: ActivatedRoute,\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public async ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.theaterCode = this.activatedRoute.snapshot.params.theaterCode;\n        this.actionService.order.delete();\n    }\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'order.money.transfer.complete.title' | translate }}\n    </h2>\n    <p class=\"mb-4 text-md-center\" [innerHTML]=\"'order.money.transfer.complete.read' | translate\"></p>\n\n\n    <div class=\"buttons mx-auto text-center\">\n        <a *ngIf=\"environment.PORTAL_SITE_URL\" class=\"btn btn-outline-primary btn-block py-3 portal-link\"\n            [href]=\"environment.PORTAL_SITE_URL\">{{ 'order.money.transfer.complete.prev' | translate }}</a>\n        <button *ngIf=\"!environment.PORTAL_SITE_URL && theaterCode\" type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n        [routerLink]=\"'/order/money/transfer/' + theaterCode + '/input'\">{{ 'order.money.transfer.complete.prev' | translate }}</button>\n        <button *ngIf=\"!environment.PORTAL_SITE_URL && !theaterCode\" type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n            routerLink=\"/order/money/transfer/input\">{{ 'order.money.transfer.complete.prev' | translate }}</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { factory } from '@cinerino/sdk';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, QRCodeService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-order-money-transfer-confirm',\n    templateUrl: './order-money-transfer-confirm.component.html',\n    styleUrls: ['./order-money-transfer-confirm.component.scss']\n})\nexport class OrderMoneyTransferConfirmComponent implements OnInit {\n    public isLoading: Observable<boolean>;\n    public order: Observable<reducers.IOrderState>;\n    public user: Observable<reducers.IUserState>;\n    public moment = moment;\n    public error: Observable<string | null>;\n    public orderStatus: typeof factory.orderStatus = factory.orderStatus;\n    public environment = getEnvironment();\n    public inputForm: FormGroup;\n    public theaterCode?: string;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private router: Router,\n        private utilService: UtilService,\n        private actionService: ActionService,\n        private translate: TranslateService,\n        private activatedRoute: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private qrcodeService: QRCodeService,\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public async ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.order = this.store.pipe(select(reducers.getOrder));\n        this.theaterCode = this.activatedRoute.snapshot.params.theaterCode;\n        this.createInputForm();\n        try {\n            const order = (await this.actionService.order.getData()).order;\n            if (order === undefined) {\n                throw new Error('order undefined');\n            }\n            const findResult =\n                order.acceptedOffers.find(a => a.itemOffered.typeOf !== factory.chevre.reservationType.EventReservation);\n            if (findResult !== undefined) {\n                throw new Error('not EventReservation');\n            }\n        } catch (error) {\n            console.error(error);\n            this.router.navigate(['/error']);\n        }\n    }\n\n    /**\n     * フォーム作成\n     */\n    private createInputForm() {\n        // const TEL_MAX_LENGTH = 15;\n        // const TEL_MIN_LENGTH = 9;\n        this.inputForm = this.formBuilder.group({\n            accountNumber: ['', [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/),\n                // Validators.maxLength(TEL_MAX_LENGTH),\n                // Validators.minLength(TEL_MIN_LENGTH),\n            ]],\n        });\n    }\n\n    /**\n     * 転送\n     */\n    public transfer() {\n        Object.keys(this.inputForm.controls).forEach((key) => {\n            this.inputForm.controls[key].markAsTouched();\n        });\n        this.inputForm.controls.accountNumber.setValue((<HTMLInputElement>document.getElementById('accountNumber')).value);\n        if (this.inputForm.invalid) {\n            return;\n        }\n        this.utilService.openConfirm({\n            title: this.translate.instant('common.confirm'),\n            body: this.translate.instant('order.money.transfer.confirm.confirm.transfer'),\n            cb: async () => {\n                try {\n                    const { order } = await this.actionService.order.getData();\n                    if (order === undefined) {\n                        throw new Error('order === undefined');\n                    }\n                    await this.actionService.order.moneyTransfer({\n                        order,\n                        toLocation: {\n                            typeOf: 'Account',\n                            identifier: this.inputForm.controls.accountNumber.value\n                        },\n                        amount: {\n                            typeOf: 'MonetaryAmount',\n                            value: 1,\n                            currency: 'Point',\n                        }\n                    });\n                    if (this.theaterCode !== undefined) {\n                        this.router.navigate([`/order/money/transfer/${this.theaterCode}/complete`]);\n                        return;\n                    }\n                    this.router.navigate(['/order/money/transfer/complete']);\n                } catch (error) {\n                    this.utilService.openAlert({\n                        title: this.translate.instant('common.error'),\n                        body: `\n                        <p class=\"mb-4\">${this.translate.instant('order.money.transfer.confirm.alert.transfer')}</p>\n                        <div class=\"p-3 bg-light-gray select-text error\">\n                            <code>${error}</code>\n                        </div>`\n                    });\n                }\n            }\n        });\n    }\n\n    public openQRReader() {\n        this.qrcodeService.openQRCodeReader({\n            cb: (data: string) => {\n                const code = data;\n                this.inputForm.controls.accountNumber.setValue(code);\n            }\n        });\n    }\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <form [formGroup]=\"inputForm\">\n        <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'order.money.transfer.confirm.title' | translate }}\n        </h2>\n        <div *ngIf=\"(order | async)?.order.orderStatus === orderStatus.OrderReturned\">\n            <p class=\"mb-4 text-md-center\" [innerHTML]=\"'order.money.transfer.confirm.canceled' | translate\"></p>\n        </div>\n        <div class=\"order-form mx-auto\" *ngIf=\"(order | async)?.order.orderStatus !== orderStatus.OrderReturned\">\n            <p class=\"mb-4 text-md-center\" [innerHTML]=\"'order.money.transfer.confirm.read' | translate\"></p>\n            <app-order-detail [order]=\"(order | async)?.order\" [customer]=\"false\">\n            </app-order-detail>\n\n            <div class=\"mx-auto p-3 bg-white mb-4\">\n                <div class=\"form-group mb-0\">\n                    <div class=\"container px-0\">\n                        <div class=\"row align-items-center\">\n                            <div class=\"col-md-4 col-12\">\n                                <label class=\"mb-2 mb-md-0\" for=\"\">{{ 'order.money.transfer.confirm.accountNumber' |\n                                    translate }}</label>\n                            </div>\n                            <div class=\"col-md-8 col-12\">\n                                <!-- <input type=\"text\" class=\"form-control\" formControlName=\"accountNumber\"\n                                    id=\"accountNumber\"> -->\n                                <div class=\"input-group\">\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"accountNumber\"\n                                        id=\"accountNumber\">\n                                    <div class=\"input-group-append\" (click)=\"openQRReader()\">\n                                        <span class=\"input-group-text\"><i class=\"fas fa-camera\"></i></span>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"inputForm.controls.accountNumber.invalid && inputForm.controls.accountNumber.touched\"\n                                    class=\"mt-2\">\n                                    <p *ngIf=\"inputForm.controls.accountNumber.errors?.required\" class=\"text-danger\">\n                                        {{ 'form.validation.required' | translate }}</p>\n                                    <p *ngIf=\"inputForm.controls.accountNumber.errors?.minlength\" class=\"text-danger\">\n                                        {{ 'form.validation.minlength' | translate: { value:\n                                        inputForm.controls.accountNumber.errors?.minlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf=\"inputForm.controls.accountNumber.errors?.maxlength\" class=\"text-danger\">\n                                        {{ 'form.validation.maxlength' | translate: { value:\n                                        inputForm.controls.accountNumber.errors?.maxlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf=\"inputForm.controls.accountNumber.errors?.pattern\" class=\"text-danger\">\n                                        {{ 'form.validation.number' | translate }}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n\n        <div class=\"buttons mx-auto text-center\">\n            <div *ngIf=\"(order | async)?.order.orderStatus !== orderStatus.OrderReturned\">\n                <button [disabled]=\"(isLoading | async) || inputForm.invalid\" type=\"button\"\n                    class=\"btn btn-primary btn-block py-3 mb-3\" (click)=\"transfer()\">{{\n                    'order.money.transfer.confirm.next' | translate }}</button>\n            </div>\n            <button *ngIf=\"theaterCode\" type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n                [routerLink]=\"'/order/money/transfer/' + theaterCode + '/input'\">{{ 'order.money.transfer.confirm.prev'\n                | translate }}</button>\n            <button *ngIf=\"!theaterCode\" type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n                routerLink=\"/order/money/transfer/input\">{{ 'order.money.transfer.confirm.prev' | translate }}</button>\n        </div>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as libphonenumber from 'libphonenumber-js';\nimport { CountryISO, NgxIntlTelInputComponent, SearchCountryField, TooltipLabel } from 'ngx-intl-tel-input';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-order-money-transfer-input',\n    templateUrl: './order-money-transfer-input.component.html',\n    styleUrls: ['./order-money-transfer-input.component.scss']\n})\nexport class OrderMoneyTransferInputComponent implements OnInit {\n    public inputForm: FormGroup;\n    public theaterCode?: string;\n    public environment = getEnvironment();\n    public isLoading: Observable<boolean>;\n    public SearchCountryField = SearchCountryField;\n    public TooltipLabel = TooltipLabel;\n    public CountryISO = CountryISO;\n    @ViewChild('intlTelInput') private intlTelInput: NgxIntlTelInputComponent;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private formBuilder: FormBuilder,\n        private utilService: UtilService,\n        private actionService: ActionService,\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private translate: TranslateService\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.theaterCode = this.activatedRoute.snapshot.params.theaterCode;\n        this.createInputForm();\n        setTimeout(() => {\n            if (this.intlTelInput === undefined) {\n                return;\n            }\n            const findResult = this.intlTelInput.allCountries.find(c => c.iso2 === CountryISO.Japan);\n            if (findResult === undefined) {\n                return;\n            }\n            findResult.placeHolder = this.translate.instant('form.placeholder.telephone');\n        }, 0);\n    }\n\n    /**\n     * フォーム作成\n     */\n    private createInputForm() {\n        const TEL_MAX_LENGTH = 15;\n        const TEL_MIN_LENGTH = 9;\n        this.inputForm = this.formBuilder.group({\n            confirmationNumber: ['', [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/)\n            ]],\n            telephone: ['', (this.environment.INQUIRY_INPUT_KEYPAD)\n                ? [\n                    Validators.required,\n                    Validators.maxLength(TEL_MAX_LENGTH),\n                    Validators.minLength(TEL_MIN_LENGTH),\n                    (control: AbstractControl): ValidationErrors | null => {\n                        const field = control.root.get('telephone');\n                        if (field !== null) {\n                            if (field.value === '') {\n                                return null;\n                            }\n                            const parsedNumber = (new RegExp(/^\\+/).test(field.value))\n                                ? libphonenumber.parse(field.value)\n                                : libphonenumber.parse(field.value, 'JP');\n                            if (parsedNumber.phone === undefined) {\n                                return { telephone: true };\n                            }\n                            const isValid = libphonenumber.isValidNumber(parsedNumber);\n                            if (!isValid) {\n                                return { telephone: true };\n                            }\n                        }\n\n                        return null;\n                    }\n                ]\n                : [Validators.required]\n            ]\n        });\n    }\n\n    /**\n     * 照会\n     */\n    public async onSubmit() {\n        Object.keys(this.inputForm.controls).forEach((key) => {\n            this.inputForm.controls[key].markAsTouched();\n        });\n        this.inputForm.controls.confirmationNumber.setValue((<HTMLInputElement>document.getElementById('confirmationNumber')).value);\n        if (this.environment.INQUIRY_INPUT_KEYPAD) {\n            this.inputForm.controls.telephone.setValue((<HTMLInputElement>document.getElementById('telephone')).value);\n        }\n        if (this.inputForm.invalid) {\n            return;\n        }\n        const confirmationNumber = this.inputForm.controls.confirmationNumber.value;\n        const telephone = (this.environment.INQUIRY_INPUT_KEYPAD)\n            ? this.inputForm.controls.telephone.value\n            : this.inputForm.controls.telephone.value.e164Number;\n        try {\n            await this.actionService.order.inquiry({\n                theaterCode: this.theaterCode,\n                confirmationNumber,\n                customer: { telephone }\n            });\n            if (this.theaterCode !== undefined) {\n                this.router.navigate([`/order/money/transfer/${this.theaterCode}/confirm`]);\n                return;\n            }\n            this.router.navigate(['/order/money/transfer/confirm']);\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.input.validation')\n            });\n        }\n    }\n\n    /**\n     * 確認番号変更\n     */\n    public changeConfirmationNumber(value: string) {\n        this.inputForm.controls.confirmationNumber.setValue(value);\n    }\n\n    /**\n     * 電話番号変更\n     */\n    public changeTelephone(value: string) {\n        this.inputForm.controls.telephone.setValue(value);\n    }\n\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <form [formGroup]=\"inputForm\">\n        <div class=\"mb-4\">\n            <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'order.money.transfer.input.title' | translate }}</h2>\n            <p class=\"mb-4 text-md-center\" [innerHTML]=\"'order.money.transfer.input.read' | translate\"></p>\n\n            <div class=\"order-form mx-auto p-3 bg-white\">\n\n                <div class=\"form-group\">\n                    <label class=\"mb-2\" for=\"\">{{ 'common.confirmationNumber' | translate }}</label>\n                    <app-numeric-keypad *ngIf=\"environment.INQUIRY_INPUT_KEYPAD\" inputType=\"string\"\n                        [inputValue]=\"inputForm.controls.confirmationNumber.value\"\n                        (change)=\"changeConfirmationNumber($event)\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"confirmationNumber\"\n                            id=\"confirmationNumber\" [placeholder]=\"'form.placeholder.confirmationNumber' | translate\"\n                            readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf=\"!environment.INQUIRY_INPUT_KEYPAD\" type=\"text\" class=\"form-control\"\n                        formControlName=\"confirmationNumber\" id=\"confirmationNumber\"\n                        [placeholder]=\"'form.placeholder.confirmationNumber' | translate\">\n                    <div *ngIf=\"inputForm.controls.confirmationNumber.invalid && inputForm.controls.confirmationNumber.touched\"\n                        class=\"mt-2\">\n                        <p *ngIf=\"inputForm.controls.confirmationNumber.errors?.required\" class=\"text-danger\">\n                            {{ 'form.validation.required' | translate }}</p>\n                        <p *ngIf=\"inputForm.controls.confirmationNumber.errors?.pattern\" class=\"text-danger\">\n                            {{ 'form.validation.number' | translate }}</p>\n                    </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                    <label class=\"mb-2\" for=\"\">{{ 'form.label.telephone' | translate }}</label>\n                    <app-numeric-keypad *ngIf=\"environment.INQUIRY_INPUT_KEYPAD\" inputType=\"telephone\"\n                        [inputValue]=\"inputForm.controls.telephone.value\" (change)=\"changeTelephone($event)\">\n                        <input type=\"password\" class=\"form-control\" formControlName=\"telephone\" id=\"telephone\"\n                            [placeholder]=\"'form.placeholder.telephone' | translate\" readonly>\n                    </app-numeric-keypad>\n                    <ngx-intl-tel-input *ngIf=\"!environment.INQUIRY_INPUT_KEYPAD\"\n                        #intlTelInput\n                        [cssClass]=\"'form-control text-security-disc'\"\n                        [preferredCountries]=\"[CountryISO.Japan]\"\n                        [enableAutoCountrySelect]=\"false\"\n                        [enablePlaceholder]=\"true\"\n                        [searchCountryFlag]=\"true\"\n                        [searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\"\n                        [selectFirstCountry]=\"false\"\n                        [selectedCountryISO]=\"CountryISO.Japan\"\n                        [maxLength]=\"15\"\n                        [tooltipField]=\"TooltipLabel.Name\"\n                        [phoneValidation]=\"true\"\n                        [separateDialCode]=\"false\"\n                        name=\"telephone\"\n                        formControlName=\"telephone\"\n                        type=\"password\"></ngx-intl-tel-input>\n                    <!-- <input *ngIf=\"!environment.INQUIRY_INPUT_KEYPAD\" type=\"password\" class=\"form-control\"\n                        formControlName=\"telephone\" id=\"telephone\"\n                        [placeholder]=\"'form.placeholder.telephone' | translate\"> -->\n                    <div *ngIf=\"inputForm.controls.telephone.invalid && inputForm.controls.telephone.touched\"\n                        class=\"mt-2\">\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.required\" class=\"text-danger\">\n                            {{ 'form.validation.required' | translate }}</p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.minlength\" class=\"text-danger\">\n                            {{ 'form.validation.minlength' | translate: { value: inputForm.controls.telephone.errors?.minlength.requiredLength } }}\n                        </p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.maxlength\" class=\"text-danger\">\n                            {{ 'form.validation.maxlength' | translate: { value: inputForm.controls.telephone.errors?.maxlength.requiredLength } }}\n                        </p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.pattern\" class=\"text-danger\">\n                            {{ 'form.validation.number' | translate }}</p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.telephone\" class=\"text-danger\">\n                            {{ 'form.validation.telephone' | translate }}</p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.validatePhoneNumber\" class=\"text-danger\">\n                            {{ 'form.validation.telephone' | translate }}\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"buttons mx-auto text-center\">\n            <button type=\"submit\" [disabled]=\"isLoading | async\" class=\"btn btn-primary btn-block py-3 mb-3\"\n                (click)=\"onSubmit()\">{{ 'order.money.transfer.input.next' | translate }}</button>\n            <a *ngIf=\"environment.PORTAL_SITE_URL\" class=\"btn btn-outline-primary btn-block py-3 portal-link\"\n                [href]=\"environment.PORTAL_SITE_URL\">{{ 'order.money.transfer.input.prev' | translate }}</a>\n            <button *ngIf=\"!environment.PORTAL_SITE_URL\" type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n                routerLink=\"/\">{{ 'order.money.transfer.input.prev' | translate }}</button>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { OrderMoneyTransferCompleteComponent } from './components/pages/order-money-transfer-complete/order-money-transfer-complete.component';\nimport { OrderMoneyTransferConfirmComponent } from './components/pages/order-money-transfer-confirm/order-money-transfer-confirm.component';\nimport { OrderMoneyTransferInputComponent } from './components/pages/order-money-transfer-input/order-money-transfer-input.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseComponent,\n    children: [\n      {\n        path: 'money/transfer',\n        children: [\n          { path: 'input', component: OrderMoneyTransferInputComponent },\n          { path: 'confirm', component: OrderMoneyTransferConfirmComponent },\n          { path: 'complete', component: OrderMoneyTransferCompleteComponent },\n          { path: ':theaterCode/input', component: OrderMoneyTransferInputComponent },\n          { path: ':theaterCode/confirm', component: OrderMoneyTransferConfirmComponent },\n          { path: ':theaterCode/complete', component: OrderMoneyTransferCompleteComponent }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { OrderMoneyTransferCompleteComponent } from './components/pages/order-money-transfer-complete/order-money-transfer-complete.component';\nimport { OrderMoneyTransferConfirmComponent } from './components/pages/order-money-transfer-confirm/order-money-transfer-confirm.component';\nimport { OrderMoneyTransferInputComponent } from './components/pages/order-money-transfer-input/order-money-transfer-input.component';\nimport { OrderRoutingModule } from './order-routing.module';\n\n\n@NgModule({\n  declarations: [\n    OrderMoneyTransferCompleteComponent,\n    OrderMoneyTransferConfirmComponent,\n    OrderMoneyTransferInputComponent\n  ],\n  imports: [\n    CommonModule,\n    OrderRoutingModule,\n    SharedModule,\n  ]\n})\nexport class OrderModule { }\n"],"sourceRoot":"webpack:///"}