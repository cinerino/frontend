{"version":3,"sources":["./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.ts","./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.html","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.ts","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.html","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.ts","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.html","./app/modules/inquiry/inquiry-routing.module.ts","./app/modules/inquiry/inquiry.module.ts"],"names":[],"mappings":"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","file":"modules-inquiry-inquiry-module.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { factory } from '@cinerino/sdk';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { Functions } from '../../../../..';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-confirm',\n    templateUrl: './inquiry-confirm.component.html',\n    styleUrls: ['./inquiry-confirm.component.scss']\n})\nexport class InquiryConfirmComponent implements OnInit, OnDestroy {\n    public isLoading: Observable<boolean>;\n    public order: Observable<reducers.IOrderState>;\n    public user: Observable<reducers.IUserState>;\n    public moment = moment;\n    public error: Observable<string | null>;\n    public orderStatus: typeof factory.orderStatus = factory.orderStatus;\n    public environment = getEnvironment();\n    public code: string;\n    private timer: any;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private router: Router,\n        private utilService: UtilService,\n        private actionService: ActionService,\n        private translate: TranslateService,\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public async ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.order = this.store.pipe(select(reducers.getOrder));\n        this.user = this.store.pipe(select(reducers.getUser));\n        try {\n            const order = (await this.actionService.order.getData()).order;\n            if (order === undefined) {\n                throw new Error('order undefined');\n            }\n            if (this.environment.INQUIRY_QRCODE) {\n                // 照会ページへQRコード表示ならコード発行\n                this.code = await this.actionService.order.authorizeOrder({ order });\n            }\n            if (this.environment.INQUIRY_PRINT_WAIT_TIME !== '') {\n                const time = Number(this.environment.INQUIRY_PRINT_WAIT_TIME);\n                this.timer = setTimeout(() => {\n                    this.router.navigate(['/inquiry/input']);\n                }, time);\n            }\n        } catch (error) {\n            console.error(error);\n            this.router.navigate(['/error']);\n        }\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer === undefined) {\n            return;\n        }\n        clearTimeout(this.timer);\n    }\n\n    /**\n     * キャンセル確認\n     */\n    public cancelConfirm() {\n        this.utilService.openConfirm({\n            title: this.translate.instant('common.confirm'),\n            body: this.translate.instant('inquiry.confirm.confirm.cancel'),\n            cb: async () => {\n                try {\n                    const userData = await this.actionService.user.getData();\n                    let orderData = await this.actionService.order.getData();\n                    if (orderData.order === undefined) {\n                        throw new Error('order undefined');\n                    }\n                    const orders = [orderData.order];\n                    const language = userData.language;\n                    await this.actionService.order.cancel({ orders, language });\n                    orderData = await this.actionService.order.getData();\n                    if (orderData.order === undefined) {\n                        throw new Error('order undefined');\n                    }\n                    await this.actionService.order.inquiry({\n                        confirmationNumber: orderData.order.confirmationNumber,\n                        customer: { telephone: orderData.order.customer.telephone }\n                    });\n                } catch (error) {\n                    this.utilService.openAlert({\n                        title: this.translate.instant('common.error'),\n                        body: `\n                        <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.cancel')}</p>\n                        <div class=\"p-3 bg-light-gray select-text error\">\n                            <code>${error}</code>\n                        </div>`\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        try {\n            const { order } = await this.actionService.order.getData();\n            const { pos, printer } = await this.actionService.user.getData();\n            if (order === undefined\n                || pos === undefined\n                || printer === undefined) {\n                throw new Error('order or pos or printer undefined');\n            }\n            const today = moment().format('YYYYMMDD');\n            const limit = moment(today)\n                .add(this.environment.INQUIRY_PRINT_EXPIRED_VALUE, this.environment.INQUIRY_PRINT_EXPIRED_UNIT)\n                .format('YYYYMMDD');\n            const eventOrders = Functions.Purchase.order2EventOrders({ order });\n            const findResult = eventOrders.find(o => moment(o.event.startDate).format('YYYYMMDD') < limit);\n            if (findResult !== undefined) {\n                this.utilService.openAlert({\n                    title: this.translate.instant('common.error'),\n                    body: this.translate.instant('inquiry.confirm.alert.printExpired')\n                });\n                return;\n            }\n            if (this.timer !== undefined) {\n                clearTimeout(this.timer);\n            }\n            const orders = [order];\n            await this.actionService.order.print({ orders, pos, printer });\n            this.router.navigate(['/inquiry/print']);\n        } catch (error) {\n            console.error(error);\n            this.router.navigate(['/error']);\n        }\n    }\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'inquiry.confirm.title' | translate }}</h2>\n    <div *ngIf=\"(order | async)?.order.orderStatus === orderStatus.OrderReturned\">\n        <p class=\"mb-4 text-md-center\" [innerHTML]=\"'inquiry.confirm.canceled' | translate\"></p>\n    </div>\n    <div *ngIf=\"(order | async)?.order.orderStatus !== orderStatus.OrderReturned\">\n        <p class=\"mb-4 text-md-center\" [innerHTML]=\"'inquiry.confirm.read' | translate\"></p>\n        <app-order-detail *ngIf=\"environment.INQUIRY_QRCODE && code\" [order]=\"(order | async)?.order\" [code]=\"code\"></app-order-detail>\n        <app-order-detail *ngIf=\"!environment.INQUIRY_QRCODE\" [order]=\"(order | async)?.order\"></app-order-detail>\n    </div>\n\n\n    <div class=\"buttons mx-auto text-center\">\n        <div *ngIf=\"(order | async)?.order.orderStatus !== orderStatus.OrderReturned\">\n            <button *ngIf=\"environment.INQUIRY_PRINT\"\n                [disabled]=\"(order | async)?.order.orderStatus !== orderStatus.OrderDelivered\" type=\"button\"\n                class=\"btn btn-primary btn-block py-3 mb-3\" (click)=\"print()\"\n                [disabled]=\"isLoading | async\">{{ 'inquiry.confirm.print' | translate }}</button>\n            <button *ngIf=\"environment.INQUIRY_CANCEL\"\n                [disabled]=\"(order | async)?.order.orderStatus !== orderStatus.OrderDelivered\" type=\"button\"\n                class=\"btn btn-danger btn-block py-3 mb-3\"\n                (click)=\"cancelConfirm()\">{{ 'inquiry.confirm.cancel' | translate }}</button>\n        </div>\n        <button type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n            routerLink=\"/inquiry/input\">{{ 'inquiry.confirm.prev' | translate }}</button>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {\n    AbstractControl,\n    FormBuilder,\n    FormGroup,\n    ValidationErrors,\n    Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as libphonenumber from 'libphonenumber-js';\nimport {\n    CountryISO,\n    NgxIntlTelInputComponent,\n    SearchCountryField,\n    TooltipLabel,\n} from 'ngx-intl-tel-input';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-input',\n    templateUrl: './inquiry-input.component.html',\n    styleUrls: ['./inquiry-input.component.scss'],\n})\nexport class InquiryInputComponent implements OnInit {\n    public inputForm: FormGroup;\n    public environment = getEnvironment();\n    public isLoading: Observable<boolean>;\n    public SearchCountryField = SearchCountryField;\n    public TooltipLabel = TooltipLabel;\n    public CountryISO = CountryISO;\n    public isPasswordMask: boolean;\n    @ViewChild('intlTelInput') private intlTelInput: NgxIntlTelInputComponent;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private formBuilder: FormBuilder,\n        private utilService: UtilService,\n        private actionService: ActionService,\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private translate: TranslateService\n    ) {}\n\n    /**\n     * 初期化\n     */\n    public ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.isPasswordMask = true;\n        this.createInputForm();\n        setTimeout(() => {\n            if (this.intlTelInput === undefined) {\n                return;\n            }\n            const findResult = this.intlTelInput.allCountries.find(\n                (c) => c.iso2 === CountryISO.Japan\n            );\n            if (findResult === undefined) {\n                return;\n            }\n            findResult.placeHolder = this.translate.instant(\n                'form.placeholder.telephone'\n            );\n        }, 0);\n    }\n\n    /**\n     * 照会フォーム作成\n     */\n    private createInputForm() {\n        const TEL_MAX_LENGTH = 15;\n        const TEL_MIN_LENGTH = 9;\n        this.inputForm = this.formBuilder.group({\n            confirmationNumber: [\n                '',\n                [Validators.required, Validators.pattern(/^[0-9]+$/)],\n            ],\n            telephone: [\n                '',\n                this.environment.INQUIRY_INPUT_KEYPAD\n                    ? [\n                          Validators.required,\n                          Validators.maxLength(TEL_MAX_LENGTH),\n                          Validators.minLength(TEL_MIN_LENGTH),\n                          (\n                              control: AbstractControl\n                          ): ValidationErrors | null => {\n                              const field = control.root.get('telephone');\n                              if (field !== null) {\n                                  if (field.value === '') {\n                                      return null;\n                                  }\n                                  const parsedNumber = new RegExp(/^\\+/).test(\n                                      field.value\n                                  )\n                                      ? libphonenumber.parse(field.value)\n                                      : libphonenumber.parse(field.value, 'JP');\n                                  if (parsedNumber.phone === undefined) {\n                                      return { telephone: true };\n                                  }\n                                  const isValid =\n                                      libphonenumber.isValidNumber(\n                                          parsedNumber\n                                      );\n                                  if (!isValid) {\n                                      return { telephone: true };\n                                  }\n                              }\n\n                              return null;\n                          },\n                      ]\n                    : [Validators.required],\n            ],\n        });\n        const confirmationNumber =\n            this.activatedRoute.snapshot.params.confirmationNumber;\n        if (confirmationNumber !== undefined) {\n            this.inputForm.controls.confirmationNumber.setValue(\n                confirmationNumber\n            );\n        }\n    }\n\n    /**\n     * 照会\n     */\n    public async onSubmit() {\n        Object.keys(this.inputForm.controls).forEach((key) => {\n            this.inputForm.controls[key].markAsTouched();\n        });\n        this.inputForm.controls.confirmationNumber.setValue(\n            (<HTMLInputElement>document.getElementById('confirmationNumber'))\n                .value\n        );\n        if (this.environment.INQUIRY_INPUT_KEYPAD) {\n            this.inputForm.controls.telephone.setValue(\n                (<HTMLInputElement>document.getElementById('telephone')).value\n            );\n        }\n        if (this.inputForm.invalid) {\n            return;\n        }\n        const confirmationNumber =\n            this.inputForm.controls.confirmationNumber.value;\n        const telephone = this.environment.INQUIRY_INPUT_KEYPAD\n            ? this.inputForm.controls.telephone.value\n            : this.inputForm.controls.telephone.value.e164Number;\n        try {\n            await this.actionService.order.inquiry({\n                confirmationNumber,\n                customer: { telephone },\n            });\n\n            this.router.navigate(['/inquiry/confirm']);\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.input.validation'),\n            });\n        }\n    }\n\n    /**\n     * 確認番号変更\n     */\n    public changeConfirmationNumber(value: string) {\n        this.inputForm.controls.confirmationNumber.setValue(value);\n    }\n\n    /**\n     * 電話番号変更\n     */\n    public changeTelephone(value: string) {\n        this.inputForm.controls.telephone.setValue(value);\n    }\n\n    /**\n     * パスワードマスク変更\n     */\n    public changePassWordMask() {\n        this.isPasswordMask = !this.isPasswordMask;\n        if (this.intlTelInput === undefined) {\n            return;\n        }\n        this.intlTelInput.cssClass = this.isPasswordMask\n            ? 'form-control text-security-disc'\n            : 'form-control';\n    }\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <form [formGroup]=\"inputForm\">\n        <div class=\"mb-4\">\n            <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'inquiry.input.title' | translate }}</h2>\n            <p class=\"mb-4 text-md-center\" [innerHTML]=\"'inquiry.input.read' | translate\"></p>\n\n            <div class=\"inquiry-form mx-auto p-3 bg-white\">\n\n                <div class=\"form-group\">\n                    <label class=\"mb-2\" for=\"\">{{ 'common.confirmationNumber' | translate }}</label>\n                    <app-numeric-keypad *ngIf=\"environment.INQUIRY_INPUT_KEYPAD\" inputType=\"string\"\n                        [inputValue]=\"inputForm.controls.confirmationNumber.value\"\n                        (change)=\"changeConfirmationNumber($event)\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"confirmationNumber\"\n                            id=\"confirmationNumber\" [placeholder]=\"'form.placeholder.confirmationNumber' | translate\"\n                            readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf=\"!environment.INQUIRY_INPUT_KEYPAD\" type=\"text\" class=\"form-control\"\n                        formControlName=\"confirmationNumber\" id=\"confirmationNumber\"\n                        [placeholder]=\"'form.placeholder.confirmationNumber' | translate\">\n                    <div *ngIf=\"inputForm.controls.confirmationNumber.invalid && inputForm.controls.confirmationNumber.touched\"\n                        class=\"mt-2\">\n                        <p *ngIf=\"inputForm.controls.confirmationNumber.errors?.required\" class=\"text-danger\">\n                            {{ 'form.validation.required' | translate }}</p>\n                        <p *ngIf=\"inputForm.controls.confirmationNumber.errors?.pattern\" class=\"text-danger\">\n                            {{ 'form.validation.number' | translate }}</p>\n                    </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                    <label class=\"mb-2\" for=\"\">{{ 'form.label.telephone' | translate }}</label>\n                    <div class=\"position-relative\" *ngIf=\"environment.INQUIRY_INPUT_KEYPAD\">\n                        <app-numeric-keypad inputType=\"telephone\"\n                            [inputValue]=\"inputForm.controls.telephone.value\" (change)=\"changeTelephone($event)\">\n                            <input [type]=\"(isPasswordMask) ? 'password' : 'text'\" class=\"form-control\" formControlName=\"telephone\" id=\"telephone\"\n                                [placeholder]=\"'form.placeholder.telephone' | translate\" readonly>\n                        </app-numeric-keypad>\n                        <button type=\"button\" class=\"btn position-absolute\" style=\"top: 0; right: 0;\" (click)=\"changePassWordMask()\">\n                            <i *ngIf=\"isPasswordMask\" class=\"fas fa-eye\"></i>\n                            <i *ngIf=\"!isPasswordMask\" class=\"fas fa-eye-slash\"></i>\n                        </button>\n                    </div>\n                    <div class=\"position-relative\" *ngIf=\"!environment.INQUIRY_INPUT_KEYPAD\">\n                        <ngx-intl-tel-input\n                            #intlTelInput\n                            [cssClass]=\"'form-control text-security-disc'\"\n                            [preferredCountries]=\"[CountryISO.Japan]\"\n                            [enableAutoCountrySelect]=\"false\"\n                            [enablePlaceholder]=\"true\"\n                            [searchCountryFlag]=\"true\"\n                            [searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\"\n                            [selectFirstCountry]=\"false\"\n                            [selectedCountryISO]=\"CountryISO.Japan\"\n                            [maxLength]=\"15\"\n                            [tooltipField]=\"TooltipLabel.Name\"\n                            [phoneValidation]=\"true\"\n                            [separateDialCode]=\"false\"\n                            name=\"telephone\"\n                            formControlName=\"telephone\"\n                            type=\"password\"></ngx-intl-tel-input>\n                            <button type=\"button\" class=\"btn position-absolute\" style=\"top: 0; right: 0;\" (click)=\"changePassWordMask()\">\n                                <i *ngIf=\"isPasswordMask\" class=\"fas fa-eye\"></i>\n                                <i *ngIf=\"!isPasswordMask\" class=\"fas fa-eye-slash\"></i>\n                            </button>\n                    </div>\n                    \n                    <!-- <input *ngIf=\"!environment.INQUIRY_INPUT_KEYPAD\" type=\"password\" class=\"form-control\"\n                        formControlName=\"telephone\" id=\"telephone\"\n                        [placeholder]=\"'form.placeholder.telephone' | translate\"> -->\n                    <div *ngIf=\"inputForm.controls.telephone.invalid && inputForm.controls.telephone.touched\"\n                        class=\"mt-2\">\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.required\" class=\"text-danger\">\n                            {{ 'form.validation.required' | translate }}</p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.minlength\" class=\"text-danger\">\n                            {{ 'form.validation.minlength' | translate: { value: inputForm.controls.telephone.errors?.minlength.requiredLength } }}\n                        </p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.maxlength\" class=\"text-danger\">\n                            {{ 'form.validation.maxlength' | translate: { value: inputForm.controls.telephone.errors?.maxlength.requiredLength } }}\n                        </p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.pattern\" class=\"text-danger\">\n                            {{ 'form.validation.number' | translate }}</p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.telephone\" class=\"text-danger\">\n                            {{ 'form.validation.telephone' | translate }}</p>\n                        <p *ngIf=\"inputForm.controls.telephone.errors?.validatePhoneNumber\" class=\"text-danger\">\n                            {{ 'form.validation.telephone' | translate }}\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"buttons mx-auto text-center\">\n            <button type=\"submit\" [disabled]=\"isLoading | async\" class=\"btn btn-primary btn-block py-3 mb-3\"\n                (click)=\"onSubmit()\">{{ 'inquiry.input.next' | translate }}</button>\n            <a *ngIf=\"environment.PORTAL_SITE_URL\" class=\"btn btn-outline-primary btn-block py-3 portal-link\"\n                [href]=\"environment.PORTAL_SITE_URL\">{{ 'inquiry.input.prev' | translate }}</a>\n            <button *ngIf=\"!environment.PORTAL_SITE_URL\" type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n                routerLink=\"/\">{{ 'inquiry.input.prev' | translate }}</button>\n        </div>\n    </form>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { getEnvironment } from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-inquiry-print',\n    templateUrl: './inquiry-print.component.html',\n    styleUrls: ['./inquiry-print.component.scss']\n})\nexport class InquiryPrintComponent implements OnInit, OnDestroy {\n    public environment = getEnvironment();\n    private timer: any;\n    constructor(\n        private router: Router\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public ngOnInit() {\n        if (this.environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME === '') {\n            return;\n        }\n        const time = Number(this.environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME);\n        this.timer = setTimeout(() => {\n            this.router.navigate(['/inquiry/input']);\n        }, time);\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer === undefined) {\n            return;\n        }\n        clearTimeout(this.timer);\n    }\n\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <div class=\"mb-4\">\n        <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'inquiry.print.title' | translate }}</h2>\n        <p class=\"mb-4 text-md-center\" [innerHTML]=\"'inquiry.print.read' | translate\"></p>\n    </div>\n\n    <div class=\"buttons mx-auto text-center\">\n        <button type=\"button\" class=\"btn btn-primary btn-block py-3\" routerLink=\"/inquiry/input\">\n            {{ 'inquiry.print.prev' | translate }}\n        </button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseComponent,\n    children: [\n        { path: 'input', component: InquiryInputComponent },\n        { path: 'input/:confirmationNumber', component: InquiryInputComponent },\n        { path: 'confirm', component: InquiryConfirmComponent },\n        { path: 'print', component: InquiryPrintComponent }\n    ]\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InquiryRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\nimport { InquiryRoutingModule } from './inquiry-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    InquiryInputComponent,\n    InquiryConfirmComponent,\n    InquiryPrintComponent,\n  ],\n  imports: [\n    CommonModule,\n    InquiryRoutingModule,\n    SharedModule,\n  ]\n})\nexport class InquiryModule { }\n"],"sourceRoot":"webpack:///"}